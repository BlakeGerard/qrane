Grammar

    0 $accept: mainprogram "end of file"

    1 mainprogram: T_OPENQASM T_REAL ";" program

    2 program: statement
    3        | program statement

    4 statement: decl
    5          | gatedecl goplist "}"
    6          | gatedecl "}"
    7          | T_OPAQUE T_ID idlist ";"
    8          | T_OPAQUE T_ID "(" ")" idlist ";"
    9          | T_OPAQUE T_ID "(" idlist ")" idlist ";"
   10          | qop
   11          | T_IF "(" T_ID "==" T_NNINTEGER ")" qop
   12          | T_BARRIER anylist ";"

   13 decl: T_QREG T_ID "[" T_NNINTEGER "]" ";"
   14     | T_CREG T_ID "[" T_NNINTEGER "]" ";"

   15 gatedecl: T_GATE_CUSTOM T_ID idlist "{"
   16         | T_GATE_CUSTOM T_ID "(" ")" idlist "{"
   17         | T_GATE_CUSTOM T_ID "(" idlist ")" idlist "{"

   18 goplist: uop
   19        | T_BARRIER idlist ";"
   20        | goplist uop
   21        | goplist T_BARRIER idlist ";"

   22 qop: uop
   23    | T_MEASURE argument "->" argument ";"
   24    | T_RESET argument ";"

   25 uop: T_U "(" explist ")" argument ";"
   26    | T_CX argument "," argument ";"
   27    | T_ID anylist ";"
   28    | T_ID "(" ")" anylist ";"
   29    | T_ID "(" explist ")" anylist ";"

   30 anylist: idlist
   31        | mixedlist

   32 idlist: T_ID
   33       | idlist "," T_ID

   34 mixedlist: T_ID "[" T_NNINTEGER "]"
   35          | mixedlist "," T_ID
   36          | mixedlist "," T_ID "[" T_NNINTEGER "]"
   37          | idlist "," T_ID "[" T_NNINTEGER "]"

   38 argument: T_ID
   39         | T_ID "[" T_NNINTEGER "]"

   40 explist: exp
   41        | explist "," exp

   42 exp: T_REAL
   43    | T_NNINTEGER
   44    | T_PI
   45    | T_ID
   46    | exp "+" exp
   47    | exp "-" exp
   48    | exp "*" exp
   49    | exp "/" exp
   50    | "-" exp
   51    | exp "^" exp
   52    | "(" exp ")"
   53    | unaryop "(" exp ")"

   54 unaryop: T_SIN
   55        | T_COS
   56        | T_TAN
   57        | T_EXP
   58        | T_LN
   59        | T_SQRT


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
T_OPENQASM (258) 1
T_QREG (259) 13
T_CREG (260) 14
T_GATE_CUSTOM (261) 15 16 17
T_OPAQUE (262) 7 8 9
T_BARRIER (263) 12 19 21
T_MEASURE (264) 23
T_RESET (265) 24
T_U (266) 25
T_CX (267) 26
T_IF (268) 11
"(" (269) 8 9 11 16 17 25 28 29 52 53
")" (270) 8 9 11 16 17 25 28 29 52 53
"{" (271) 15 16 17
"}" (272) 5 6
"[" (273) 13 14 34 36 37 39
"]" (274) 13 14 34 36 37 39
"," (275) 26 33 35 36 37 41
";" (276) 1 7 8 9 12 13 14 19 21 23 24 25 26 27 28 29
"->" (277) 23
"+" (278) 46
"-" (279) 47 50
"*" (280) 48
"/" (281) 49
"^" (282) 51
"==" (283) 11
T_PI (284) 44
T_SIN (285) 54
T_COS (286) 55
T_TAN (287) 56
T_EXP (288) 57
T_LN (289) 58
T_SQRT (290) 59
T_ID <std::string> (291) 7 8 9 11 13 14 15 16 17 27 28 29 32 33 34
    35 36 37 38 39 45
T_REAL <double> (292) 1 42
T_NNINTEGER <int> (293) 11 13 14 34 36 37 39 43


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
mainprogram <qrane_mainprogram*> (40)
    on left: 1, on right: 0
program <qrane_stmtlist*> (41)
    on left: 2 3, on right: 1 3
statement <qrane_statement*> (42)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 3
decl <qrane_decl*> (43)
    on left: 13 14, on right: 4
gatedecl <qrane_decl*> (44)
    on left: 15 16 17, on right: 5 6
goplist <qrane_stmtlist*> (45)
    on left: 18 19 20 21, on right: 5 20 21
qop <qrane_qop*> (46)
    on left: 22 23 24, on right: 10 11
uop <qrane_qop*> (47)
    on left: 25 26 27 28 29, on right: 18 20 22
anylist <qrane_arglist*> (48)
    on left: 30 31, on right: 12 27 28 29
idlist <qrane_idlist*> (49)
    on left: 32 33, on right: 7 8 9 15 16 17 19 21 30 33 37
mixedlist <qrane_arglist*> (50)
    on left: 34 35 36 37, on right: 31 35 36
argument <qrane_argument*> (51)
    on left: 38 39, on right: 23 24 25 26
explist <qrane_explist*> (52)
    on left: 40 41, on right: 25 29 41
exp <qrane_exp*> (53)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53, on right: 40 41 46
    47 48 49 50 51 52 53
unaryop <qrane_exp::unaryop_type> (54)
    on left: 54 55 56 57 58 59, on right: 53


State 0

    0 $accept: . mainprogram "end of file"

    T_OPENQASM  shift, and go to state 1

    mainprogram  go to state 2


State 1

    1 mainprogram: T_OPENQASM . T_REAL ";" program

    T_REAL  shift, and go to state 3


State 2

    0 $accept: mainprogram . "end of file"

    "end of file"  shift, and go to state 4


State 3

    1 mainprogram: T_OPENQASM T_REAL . ";" program

    ";"  shift, and go to state 5


State 4

    0 $accept: mainprogram "end of file" .

    $default  accept


State 5

    1 mainprogram: T_OPENQASM T_REAL ";" . program

    T_QREG         shift, and go to state 6
    T_CREG         shift, and go to state 7
    T_GATE_CUSTOM  shift, and go to state 8
    T_OPAQUE       shift, and go to state 9
    T_BARRIER      shift, and go to state 10
    T_MEASURE      shift, and go to state 11
    T_RESET        shift, and go to state 12
    T_U            shift, and go to state 13
    T_CX           shift, and go to state 14
    T_IF           shift, and go to state 15
    T_ID           shift, and go to state 16

    program    go to state 17
    statement  go to state 18
    decl       go to state 19
    gatedecl   go to state 20
    qop        go to state 21
    uop        go to state 22


State 6

   13 decl: T_QREG . T_ID "[" T_NNINTEGER "]" ";"

    T_ID  shift, and go to state 23


State 7

   14 decl: T_CREG . T_ID "[" T_NNINTEGER "]" ";"

    T_ID  shift, and go to state 24


State 8

   15 gatedecl: T_GATE_CUSTOM . T_ID idlist "{"
   16         | T_GATE_CUSTOM . T_ID "(" ")" idlist "{"
   17         | T_GATE_CUSTOM . T_ID "(" idlist ")" idlist "{"

    T_ID  shift, and go to state 25


State 9

    7 statement: T_OPAQUE . T_ID idlist ";"
    8          | T_OPAQUE . T_ID "(" ")" idlist ";"
    9          | T_OPAQUE . T_ID "(" idlist ")" idlist ";"

    T_ID  shift, and go to state 26


State 10

   12 statement: T_BARRIER . anylist ";"

    T_ID  shift, and go to state 27

    anylist    go to state 28
    idlist     go to state 29
    mixedlist  go to state 30


State 11

   23 qop: T_MEASURE . argument "->" argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 32


State 12

   24 qop: T_RESET . argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 33


State 13

   25 uop: T_U . "(" explist ")" argument ";"

    "("  shift, and go to state 34


State 14

   26 uop: T_CX . argument "," argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 35


State 15

   11 statement: T_IF . "(" T_ID "==" T_NNINTEGER ")" qop

    "("  shift, and go to state 36


State 16

   27 uop: T_ID . anylist ";"
   28    | T_ID . "(" ")" anylist ";"
   29    | T_ID . "(" explist ")" anylist ";"

    "("   shift, and go to state 37
    T_ID  shift, and go to state 27

    anylist    go to state 38
    idlist     go to state 29
    mixedlist  go to state 30


State 17

    1 mainprogram: T_OPENQASM T_REAL ";" program .
    3 program: program . statement

    T_QREG         shift, and go to state 6
    T_CREG         shift, and go to state 7
    T_GATE_CUSTOM  shift, and go to state 8
    T_OPAQUE       shift, and go to state 9
    T_BARRIER      shift, and go to state 10
    T_MEASURE      shift, and go to state 11
    T_RESET        shift, and go to state 12
    T_U            shift, and go to state 13
    T_CX           shift, and go to state 14
    T_IF           shift, and go to state 15
    T_ID           shift, and go to state 16

    $default  reduce using rule 1 (mainprogram)

    statement  go to state 39
    decl       go to state 19
    gatedecl   go to state 20
    qop        go to state 21
    uop        go to state 22


State 18

    2 program: statement .

    $default  reduce using rule 2 (program)


State 19

    4 statement: decl .

    $default  reduce using rule 4 (statement)


State 20

    5 statement: gatedecl . goplist "}"
    6          | gatedecl . "}"

    T_BARRIER  shift, and go to state 40
    T_U        shift, and go to state 13
    T_CX       shift, and go to state 14
    "}"        shift, and go to state 41
    T_ID       shift, and go to state 16

    goplist  go to state 42
    uop      go to state 43


State 21

   10 statement: qop .

    $default  reduce using rule 10 (statement)


State 22

   22 qop: uop .

    $default  reduce using rule 22 (qop)


State 23

   13 decl: T_QREG T_ID . "[" T_NNINTEGER "]" ";"

    "["  shift, and go to state 44


State 24

   14 decl: T_CREG T_ID . "[" T_NNINTEGER "]" ";"

    "["  shift, and go to state 45


State 25

   15 gatedecl: T_GATE_CUSTOM T_ID . idlist "{"
   16         | T_GATE_CUSTOM T_ID . "(" ")" idlist "{"
   17         | T_GATE_CUSTOM T_ID . "(" idlist ")" idlist "{"

    "("   shift, and go to state 46
    T_ID  shift, and go to state 47

    idlist  go to state 48


State 26

    7 statement: T_OPAQUE T_ID . idlist ";"
    8          | T_OPAQUE T_ID . "(" ")" idlist ";"
    9          | T_OPAQUE T_ID . "(" idlist ")" idlist ";"

    "("   shift, and go to state 49
    T_ID  shift, and go to state 47

    idlist  go to state 50


State 27

   32 idlist: T_ID .
   34 mixedlist: T_ID . "[" T_NNINTEGER "]"

    "["  shift, and go to state 51

    $default  reduce using rule 32 (idlist)


State 28

   12 statement: T_BARRIER anylist . ";"

    ";"  shift, and go to state 52


State 29

   30 anylist: idlist .
   33 idlist: idlist . "," T_ID
   37 mixedlist: idlist . "," T_ID "[" T_NNINTEGER "]"

    ","  shift, and go to state 53

    $default  reduce using rule 30 (anylist)


State 30

   31 anylist: mixedlist .
   35 mixedlist: mixedlist . "," T_ID
   36          | mixedlist . "," T_ID "[" T_NNINTEGER "]"

    ","  shift, and go to state 54

    $default  reduce using rule 31 (anylist)


State 31

   38 argument: T_ID .
   39         | T_ID . "[" T_NNINTEGER "]"

    "["  shift, and go to state 55

    $default  reduce using rule 38 (argument)


State 32

   23 qop: T_MEASURE argument . "->" argument ";"

    "->"  shift, and go to state 56


State 33

   24 qop: T_RESET argument . ";"

    ";"  shift, and go to state 57


State 34

   25 uop: T_U "(" . explist ")" argument ";"

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    explist  go to state 70
    exp      go to state 71
    unaryop  go to state 72


State 35

   26 uop: T_CX argument . "," argument ";"

    ","  shift, and go to state 73


State 36

   11 statement: T_IF "(" . T_ID "==" T_NNINTEGER ")" qop

    T_ID  shift, and go to state 74


State 37

   28 uop: T_ID "(" . ")" anylist ";"
   29    | T_ID "(" . explist ")" anylist ";"

    "("          shift, and go to state 58
    ")"          shift, and go to state 75
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    explist  go to state 76
    exp      go to state 71
    unaryop  go to state 72


State 38

   27 uop: T_ID anylist . ";"

    ";"  shift, and go to state 77


State 39

    3 program: program statement .

    $default  reduce using rule 3 (program)


State 40

   19 goplist: T_BARRIER . idlist ";"

    T_ID  shift, and go to state 47

    idlist  go to state 78


State 41

    6 statement: gatedecl "}" .

    $default  reduce using rule 6 (statement)


State 42

    5 statement: gatedecl goplist . "}"
   20 goplist: goplist . uop
   21        | goplist . T_BARRIER idlist ";"

    T_BARRIER  shift, and go to state 79
    T_U        shift, and go to state 13
    T_CX       shift, and go to state 14
    "}"        shift, and go to state 80
    T_ID       shift, and go to state 16

    uop  go to state 81


State 43

   18 goplist: uop .

    $default  reduce using rule 18 (goplist)


State 44

   13 decl: T_QREG T_ID "[" . T_NNINTEGER "]" ";"

    T_NNINTEGER  shift, and go to state 82


State 45

   14 decl: T_CREG T_ID "[" . T_NNINTEGER "]" ";"

    T_NNINTEGER  shift, and go to state 83


State 46

   16 gatedecl: T_GATE_CUSTOM T_ID "(" . ")" idlist "{"
   17         | T_GATE_CUSTOM T_ID "(" . idlist ")" idlist "{"

    ")"   shift, and go to state 84
    T_ID  shift, and go to state 47

    idlist  go to state 85


State 47

   32 idlist: T_ID .

    $default  reduce using rule 32 (idlist)


State 48

   15 gatedecl: T_GATE_CUSTOM T_ID idlist . "{"
   33 idlist: idlist . "," T_ID

    "{"  shift, and go to state 86
    ","  shift, and go to state 87


State 49

    8 statement: T_OPAQUE T_ID "(" . ")" idlist ";"
    9          | T_OPAQUE T_ID "(" . idlist ")" idlist ";"

    ")"   shift, and go to state 88
    T_ID  shift, and go to state 47

    idlist  go to state 89


State 50

    7 statement: T_OPAQUE T_ID idlist . ";"
   33 idlist: idlist . "," T_ID

    ","  shift, and go to state 87
    ";"  shift, and go to state 90


State 51

   34 mixedlist: T_ID "[" . T_NNINTEGER "]"

    T_NNINTEGER  shift, and go to state 91


State 52

   12 statement: T_BARRIER anylist ";" .

    $default  reduce using rule 12 (statement)


State 53

   33 idlist: idlist "," . T_ID
   37 mixedlist: idlist "," . T_ID "[" T_NNINTEGER "]"

    T_ID  shift, and go to state 92


State 54

   35 mixedlist: mixedlist "," . T_ID
   36          | mixedlist "," . T_ID "[" T_NNINTEGER "]"

    T_ID  shift, and go to state 93


State 55

   39 argument: T_ID "[" . T_NNINTEGER "]"

    T_NNINTEGER  shift, and go to state 94


State 56

   23 qop: T_MEASURE argument "->" . argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 95


State 57

   24 qop: T_RESET argument ";" .

    $default  reduce using rule 24 (qop)


State 58

   52 exp: "(" . exp ")"

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 96
    unaryop  go to state 72


State 59

   50 exp: "-" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 97
    unaryop  go to state 72


State 60

   44 exp: T_PI .

    $default  reduce using rule 44 (exp)


State 61

   54 unaryop: T_SIN .

    $default  reduce using rule 54 (unaryop)


State 62

   55 unaryop: T_COS .

    $default  reduce using rule 55 (unaryop)


State 63

   56 unaryop: T_TAN .

    $default  reduce using rule 56 (unaryop)


State 64

   57 unaryop: T_EXP .

    $default  reduce using rule 57 (unaryop)


State 65

   58 unaryop: T_LN .

    $default  reduce using rule 58 (unaryop)


State 66

   59 unaryop: T_SQRT .

    $default  reduce using rule 59 (unaryop)


State 67

   45 exp: T_ID .

    $default  reduce using rule 45 (exp)


State 68

   42 exp: T_REAL .

    $default  reduce using rule 42 (exp)


State 69

   43 exp: T_NNINTEGER .

    $default  reduce using rule 43 (exp)


State 70

   25 uop: T_U "(" explist . ")" argument ";"
   41 explist: explist . "," exp

    ")"  shift, and go to state 98
    ","  shift, and go to state 99


State 71

   40 explist: exp .
   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp

    "+"  shift, and go to state 100
    "-"  shift, and go to state 101
    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 40 (explist)


State 72

   53 exp: unaryop . "(" exp ")"

    "("  shift, and go to state 105


State 73

   26 uop: T_CX argument "," . argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 106


State 74

   11 statement: T_IF "(" T_ID . "==" T_NNINTEGER ")" qop

    "=="  shift, and go to state 107


State 75

   28 uop: T_ID "(" ")" . anylist ";"

    T_ID  shift, and go to state 27

    anylist    go to state 108
    idlist     go to state 29
    mixedlist  go to state 30


State 76

   29 uop: T_ID "(" explist . ")" anylist ";"
   41 explist: explist . "," exp

    ")"  shift, and go to state 109
    ","  shift, and go to state 99


State 77

   27 uop: T_ID anylist ";" .

    $default  reduce using rule 27 (uop)


State 78

   19 goplist: T_BARRIER idlist . ";"
   33 idlist: idlist . "," T_ID

    ","  shift, and go to state 87
    ";"  shift, and go to state 110


State 79

   21 goplist: goplist T_BARRIER . idlist ";"

    T_ID  shift, and go to state 47

    idlist  go to state 111


State 80

    5 statement: gatedecl goplist "}" .

    $default  reduce using rule 5 (statement)


State 81

   20 goplist: goplist uop .

    $default  reduce using rule 20 (goplist)


State 82

   13 decl: T_QREG T_ID "[" T_NNINTEGER . "]" ";"

    "]"  shift, and go to state 112


State 83

   14 decl: T_CREG T_ID "[" T_NNINTEGER . "]" ";"

    "]"  shift, and go to state 113


State 84

   16 gatedecl: T_GATE_CUSTOM T_ID "(" ")" . idlist "{"

    T_ID  shift, and go to state 47

    idlist  go to state 114


State 85

   17 gatedecl: T_GATE_CUSTOM T_ID "(" idlist . ")" idlist "{"
   33 idlist: idlist . "," T_ID

    ")"  shift, and go to state 115
    ","  shift, and go to state 87


State 86

   15 gatedecl: T_GATE_CUSTOM T_ID idlist "{" .

    $default  reduce using rule 15 (gatedecl)


State 87

   33 idlist: idlist "," . T_ID

    T_ID  shift, and go to state 116


State 88

    8 statement: T_OPAQUE T_ID "(" ")" . idlist ";"

    T_ID  shift, and go to state 47

    idlist  go to state 117


State 89

    9 statement: T_OPAQUE T_ID "(" idlist . ")" idlist ";"
   33 idlist: idlist . "," T_ID

    ")"  shift, and go to state 118
    ","  shift, and go to state 87


State 90

    7 statement: T_OPAQUE T_ID idlist ";" .

    $default  reduce using rule 7 (statement)


State 91

   34 mixedlist: T_ID "[" T_NNINTEGER . "]"

    "]"  shift, and go to state 119


State 92

   33 idlist: idlist "," T_ID .
   37 mixedlist: idlist "," T_ID . "[" T_NNINTEGER "]"

    "["  shift, and go to state 120

    $default  reduce using rule 33 (idlist)


State 93

   35 mixedlist: mixedlist "," T_ID .
   36          | mixedlist "," T_ID . "[" T_NNINTEGER "]"

    "["  shift, and go to state 121

    $default  reduce using rule 35 (mixedlist)


State 94

   39 argument: T_ID "[" T_NNINTEGER . "]"

    "]"  shift, and go to state 122


State 95

   23 qop: T_MEASURE argument "->" argument . ";"

    ";"  shift, and go to state 123


State 96

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp
   52    | "(" exp . ")"

    ")"  shift, and go to state 124
    "+"  shift, and go to state 100
    "-"  shift, and go to state 101
    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104


State 97

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   50    | "-" exp .
   51    | exp . "^" exp

    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 50 (exp)


State 98

   25 uop: T_U "(" explist ")" . argument ";"

    T_ID  shift, and go to state 31

    argument  go to state 125


State 99

   41 explist: explist "," . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 126
    unaryop  go to state 72


State 100

   46 exp: exp "+" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 127
    unaryop  go to state 72


State 101

   47 exp: exp "-" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 128
    unaryop  go to state 72


State 102

   48 exp: exp "*" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 129
    unaryop  go to state 72


State 103

   49 exp: exp "/" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 130
    unaryop  go to state 72


State 104

   51 exp: exp "^" . exp

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 131
    unaryop  go to state 72


State 105

   53 exp: unaryop "(" . exp ")"

    "("          shift, and go to state 58
    "-"          shift, and go to state 59
    T_PI         shift, and go to state 60
    T_SIN        shift, and go to state 61
    T_COS        shift, and go to state 62
    T_TAN        shift, and go to state 63
    T_EXP        shift, and go to state 64
    T_LN         shift, and go to state 65
    T_SQRT       shift, and go to state 66
    T_ID         shift, and go to state 67
    T_REAL       shift, and go to state 68
    T_NNINTEGER  shift, and go to state 69

    exp      go to state 132
    unaryop  go to state 72


State 106

   26 uop: T_CX argument "," argument . ";"

    ";"  shift, and go to state 133


State 107

   11 statement: T_IF "(" T_ID "==" . T_NNINTEGER ")" qop

    T_NNINTEGER  shift, and go to state 134


State 108

   28 uop: T_ID "(" ")" anylist . ";"

    ";"  shift, and go to state 135


State 109

   29 uop: T_ID "(" explist ")" . anylist ";"

    T_ID  shift, and go to state 27

    anylist    go to state 136
    idlist     go to state 29
    mixedlist  go to state 30


State 110

   19 goplist: T_BARRIER idlist ";" .

    $default  reduce using rule 19 (goplist)


State 111

   21 goplist: goplist T_BARRIER idlist . ";"
   33 idlist: idlist . "," T_ID

    ","  shift, and go to state 87
    ";"  shift, and go to state 137


State 112

   13 decl: T_QREG T_ID "[" T_NNINTEGER "]" . ";"

    ";"  shift, and go to state 138


State 113

   14 decl: T_CREG T_ID "[" T_NNINTEGER "]" . ";"

    ";"  shift, and go to state 139


State 114

   16 gatedecl: T_GATE_CUSTOM T_ID "(" ")" idlist . "{"
   33 idlist: idlist . "," T_ID

    "{"  shift, and go to state 140
    ","  shift, and go to state 87


State 115

   17 gatedecl: T_GATE_CUSTOM T_ID "(" idlist ")" . idlist "{"

    T_ID  shift, and go to state 47

    idlist  go to state 141


State 116

   33 idlist: idlist "," T_ID .

    $default  reduce using rule 33 (idlist)


State 117

    8 statement: T_OPAQUE T_ID "(" ")" idlist . ";"
   33 idlist: idlist . "," T_ID

    ","  shift, and go to state 87
    ";"  shift, and go to state 142


State 118

    9 statement: T_OPAQUE T_ID "(" idlist ")" . idlist ";"

    T_ID  shift, and go to state 47

    idlist  go to state 143


State 119

   34 mixedlist: T_ID "[" T_NNINTEGER "]" .

    $default  reduce using rule 34 (mixedlist)


State 120

   37 mixedlist: idlist "," T_ID "[" . T_NNINTEGER "]"

    T_NNINTEGER  shift, and go to state 144


State 121

   36 mixedlist: mixedlist "," T_ID "[" . T_NNINTEGER "]"

    T_NNINTEGER  shift, and go to state 145


State 122

   39 argument: T_ID "[" T_NNINTEGER "]" .

    $default  reduce using rule 39 (argument)


State 123

   23 qop: T_MEASURE argument "->" argument ";" .

    $default  reduce using rule 23 (qop)


State 124

   52 exp: "(" exp ")" .

    $default  reduce using rule 52 (exp)


State 125

   25 uop: T_U "(" explist ")" argument . ";"

    ";"  shift, and go to state 146


State 126

   41 explist: explist "," exp .
   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp

    "+"  shift, and go to state 100
    "-"  shift, and go to state 101
    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 41 (explist)


State 127

   46 exp: exp . "+" exp
   46    | exp "+" exp .
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp

    "-"  shift, and go to state 101
    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 46 (exp)


State 128

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   47    | exp "-" exp .
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp

    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 47 (exp)


State 129

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   48    | exp "*" exp .
   49    | exp . "/" exp
   51    | exp . "^" exp

    "/"  shift, and go to state 103
    "^"  shift, and go to state 104

    $default  reduce using rule 48 (exp)


State 130

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   49    | exp "/" exp .
   51    | exp . "^" exp

    "^"  shift, and go to state 104

    $default  reduce using rule 49 (exp)


State 131

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp
   51    | exp "^" exp .

    $default  reduce using rule 51 (exp)


State 132

   46 exp: exp . "+" exp
   47    | exp . "-" exp
   48    | exp . "*" exp
   49    | exp . "/" exp
   51    | exp . "^" exp
   53    | unaryop "(" exp . ")"

    ")"  shift, and go to state 147
    "+"  shift, and go to state 100
    "-"  shift, and go to state 101
    "*"  shift, and go to state 102
    "/"  shift, and go to state 103
    "^"  shift, and go to state 104


State 133

   26 uop: T_CX argument "," argument ";" .

    $default  reduce using rule 26 (uop)


State 134

   11 statement: T_IF "(" T_ID "==" T_NNINTEGER . ")" qop

    ")"  shift, and go to state 148


State 135

   28 uop: T_ID "(" ")" anylist ";" .

    $default  reduce using rule 28 (uop)


State 136

   29 uop: T_ID "(" explist ")" anylist . ";"

    ";"  shift, and go to state 149


State 137

   21 goplist: goplist T_BARRIER idlist ";" .

    $default  reduce using rule 21 (goplist)


State 138

   13 decl: T_QREG T_ID "[" T_NNINTEGER "]" ";" .

    $default  reduce using rule 13 (decl)


State 139

   14 decl: T_CREG T_ID "[" T_NNINTEGER "]" ";" .

    $default  reduce using rule 14 (decl)


State 140

   16 gatedecl: T_GATE_CUSTOM T_ID "(" ")" idlist "{" .

    $default  reduce using rule 16 (gatedecl)


State 141

   17 gatedecl: T_GATE_CUSTOM T_ID "(" idlist ")" idlist . "{"
   33 idlist: idlist . "," T_ID

    "{"  shift, and go to state 150
    ","  shift, and go to state 87


State 142

    8 statement: T_OPAQUE T_ID "(" ")" idlist ";" .

    $default  reduce using rule 8 (statement)


State 143

    9 statement: T_OPAQUE T_ID "(" idlist ")" idlist . ";"
   33 idlist: idlist . "," T_ID

    ","  shift, and go to state 87
    ";"  shift, and go to state 151


State 144

   37 mixedlist: idlist "," T_ID "[" T_NNINTEGER . "]"

    "]"  shift, and go to state 152


State 145

   36 mixedlist: mixedlist "," T_ID "[" T_NNINTEGER . "]"

    "]"  shift, and go to state 153


State 146

   25 uop: T_U "(" explist ")" argument ";" .

    $default  reduce using rule 25 (uop)


State 147

   53 exp: unaryop "(" exp ")" .

    $default  reduce using rule 53 (exp)


State 148

   11 statement: T_IF "(" T_ID "==" T_NNINTEGER ")" . qop

    T_MEASURE  shift, and go to state 11
    T_RESET    shift, and go to state 12
    T_U        shift, and go to state 13
    T_CX       shift, and go to state 14
    T_ID       shift, and go to state 16

    qop  go to state 154
    uop  go to state 22


State 149

   29 uop: T_ID "(" explist ")" anylist ";" .

    $default  reduce using rule 29 (uop)


State 150

   17 gatedecl: T_GATE_CUSTOM T_ID "(" idlist ")" idlist "{" .

    $default  reduce using rule 17 (gatedecl)


State 151

    9 statement: T_OPAQUE T_ID "(" idlist ")" idlist ";" .

    $default  reduce using rule 9 (statement)


State 152

   37 mixedlist: idlist "," T_ID "[" T_NNINTEGER "]" .

    $default  reduce using rule 37 (mixedlist)


State 153

   36 mixedlist: mixedlist "," T_ID "[" T_NNINTEGER "]" .

    $default  reduce using rule 36 (mixedlist)


State 154

   11 statement: T_IF "(" T_ID "==" T_NNINTEGER ")" qop .

    $default  reduce using rule 11 (statement)
