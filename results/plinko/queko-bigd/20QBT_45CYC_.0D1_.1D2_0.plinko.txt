Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... Building circuit form ...  Done.
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Scheduling ... Done.
Checking

Domain := { S18[i0] : 0 <= i0 <= 1; S11[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S5[i0] : 0 <= i0 <= 1; S21[i0] : 0 <= i0 <= 1; S3[i0] : 0 <= i0 <= 1; S20[i0] : 0 <= i0 <= 1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] : 0 <= i0 <= 1; S4[i0] : 0 <= i0 <= 1; S14[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S16[i0] : 0 <= i0 <= 1; S8[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0] : 0 <= i0 <= 1; S6[i0] : 0 <= i0 <= 1; S2[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S19[i0] : 0 <= i0 <= 1; S17[i0] : 0 <= i0 <= 1 }

Read := { S2[i0] -> q[18 - i0] : 0 <= i0 <= 1; S2[i0] -> q[1 + 12i0] : 0 <= i0 <= 1; S1[i0] -> q[18 - 2i0] : 0 <= i0 <= 1; S1[i0] -> q[5 + 13i0] : 0 <= i0 <= 1; S21[i0] -> q[18 - 11i0] : 0 <= i0 <= 1; S21[i0] -> q[4 + 14i0] : 0 <= i0 <= 1; S20[i0] -> q[16 - 16i0] : 0 <= i0 <= 1; S20[i0] -> q[3 + 13i0] : 0 <= i0 <= 1; S3[i0] -> q[15 + i0] : 0 <= i0 <= 1; S3[i0] -> q[12 + 2i0] : 0 <= i0 <= 1; S6[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S6[i0] -> q[10 + 3i0] : 0 <= i0 <= 1; S9[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S9[i0] -> q[10 - 3i0] : 0 <= i0 <= 1; S15[i0] -> q[16 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[7 + 9i0] : 0 <= i0 <= 1; S16[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S16[i0] -> q[5 + 2i0] : 0 <= i0 <= 1; S17[i0] -> q[18 - 11i0] : 0 <= i0 <= 1; S17[i0] -> q[4 + 12i0] : 0 <= i0 <= 1; S18[i0] -> q[4 + 14i0] : 0 <= i0 <= 1; S18[i0] -> q[3 + 4i0] : 0 <= i0 <= 1; S4[i0] -> q[12 + i0] : 0 <= i0 <= 1; S4[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S8[i0, i1] -> q[16 + 2i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, i1] -> q[7] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S11[i0, i1] -> q[7] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S11[i0, i1] -> q[18i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S7[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S7[i0] -> q[10 - 3i0] : 0 <= i0 <= 1; S5[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S5[i0] -> q[10 + 3i0] : 0 <= i0 <= 1; S10[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S10[i0] -> q[10 - 3i0] : 0 <= i0 <= 1; S14[i0] -> q[7 + 9i0] : 0 <= i0 <= 1; S14[i0] -> q[18i0] : 0 <= i0 <= 1; S19[i0] -> q[18 - 18i0] : 0 <= i0 <= 1; S19[i0] -> q[1 + 15i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[18 - 17i0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[1 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Write := { S2[i0] -> q[1 + 12i0] : 0 <= i0 <= 1; S1[i0] -> q[5 + 13i0] : 0 <= i0 <= 1; S21[i0] -> q[4 + 14i0] : 0 <= i0 <= 1; S20[i0] -> q[3 + 13i0] : 0 <= i0 <= 1; S3[i0] -> q[12 + 2i0] : 0 <= i0 <= 1; S6[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S9[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S15[i0] -> q[16 + 2i0] : 0 <= i0 <= 1; S16[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S17[i0] -> q[4 + 12i0] : 0 <= i0 <= 1; S18[i0] -> q[4 + 14i0] : 0 <= i0 <= 1; S4[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S8[i0, i1] -> q[16 + 2i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S11[i0, i1] -> q[18i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S7[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S5[i0] -> q[11 + 5i0] : 0 <= i0 <= 1; S10[i0] -> q[12 + 6i0] : 0 <= i0 <= 1; S14[i0] -> q[18i0] : 0 <= i0 <= 1; S19[i0] -> q[1 + 15i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[1 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Call := { S10[i0] -> [10 - 3i0, 12 + 6i0] : 0 <= i0 <= 1; S16[i0] -> [5 + 2i0, 12 + 6i0] : 0 <= i0 <= 1; S15[i0] -> [7 + 9i0, 16 + 2i0] : 0 <= i0 <= 1; S0[i0, i1] -> [18 - 17i0, 1 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S17[i0] -> [18 - 11i0, 4 + 12i0] : 0 <= i0 <= 1; S2[i0] -> [18 - i0, 1 + 12i0] : 0 <= i0 <= 1; S9[i0] -> [10 - 3i0, 12 + 6i0] : 0 <= i0 <= 1; S4[i0] -> [12 + i0, 11 + 5i0] : 0 <= i0 <= 1; S8[i0, i1] -> [7, 16 + 2i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S5[i0] -> [10 + 3i0, 11 + 5i0] : 0 <= i0 <= 1; S6[i0] -> [10 + 3i0, 11 + 5i0] : 0 <= i0 <= 1; S3[i0] -> [15 + i0, 12 + 2i0] : 0 <= i0 <= 1; S18[i0] -> [3 + 4i0, 4 + 14i0] : 0 <= i0 <= 1; S14[i0] -> [7 + 9i0, 18i0] : 0 <= i0 <= 1; S7[i0] -> [10 - 3i0, 11 + 5i0] : 0 <= i0 <= 1; S19[i0] -> [18 - 18i0, 1 + 15i0] : 0 <= i0 <= 1; S20[i0] -> [16 - 16i0, 3 + 13i0] : 0 <= i0 <= 1; S1[i0] -> [18 - 2i0, 5 + 13i0] : 0 <= i0 <= 1; S21[i0] -> [18 - 11i0, 4 + 14i0] : 0 <= i0 <= 1; S11[i0, i1] -> [7, 18i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

RecoveredSchedule := { S8[1, 1] -> [28]; S8[1, 0] -> [23]; S8[0, 0] -> [16]; S8[0, 1] -> [9]; S20[0] -> [34]; S20[1] -> [19]; S21[0] -> [43]; S21[1] -> [41]; S6[1] -> [14]; S6[0] -> [1]; S14[1] -> [30]; S14[0] -> [26]; S7[1] -> [15]; S7[0] -> [2]; S11[i0, 1 - i0] -> [24 + i0] : 0 <= i0 <= 1; S11[1, 1] -> [29]; S11[0, 0] -> [20]; S1[1] -> [10]; S1[0] -> [8]; S3[1] -> [17]; S3[0] -> [4]; S0[0, i1] -> [31 + i1] : 0 <= i1 <= 1; S0[1, 0] -> [44]; S2[0] -> [37]; S2[1] -> [12]; S5[1] -> [13]; S5[0] -> [0]; S18[1] -> [40]; S18[0] -> [33]; S9[1] -> [21]; S9[0] -> [5]; S10[1] -> [22]; S10[0] -> [6]; S16[1] -> [38]; S16[0] -> [7]; S4[1] -> [11]; S4[0] -> [3]; S19[0] -> [42]; S19[1] -> [18]; S17[1] -> [39]; S17[0] -> [36]; S15[1] -> [35]; S15[0] -> [27] }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 17 domains, 34 points.
2D: 3 domains, 11 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 17
3 : 1
4 : 2
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:17,}
2 -> {3:1,4:2,}
------------------------------
--- Timing ---
Reconstruction: 12ms
Scheduling: 0ms
Total execution time: 12ms
-------------
