Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... Building circuit form ...  Done.
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Scheduling ... Done.
Checking

Domain := { S11[i0] : 0 <= i0 <= 1; S18[i0] : 0 <= i0 <= 1; S8[i0] : 0 <= i0 <= 1; S5[i0] : 0 <= i0 <= 1; S3[i0] : 0 <= i0 <= 1; S20[i0] : 0 <= i0 <= 1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] : 0 <= i0 <= 1; S4[i0] : 0 <= i0 <= 1; S14[i0] : 0 <= i0 <= 1; S12[i0] : 0 <= i0 <= 1; S13[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S16[i0] : 0 <= i0 <= 1; S6[i0] : 0 <= i0 <= 1; S19[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S2[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S17[i0] : 0 <= i0 <= 1; S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Read := { S12[i0] -> q[16 - 13i0] : 0 <= i0 <= 1; S12[i0] -> q[2i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[3 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[4i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S20[i0] -> q[19 - 13i0] : 0 <= i0 <= 1; S20[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S3[i0] -> q[16 - 16i0] : 0 <= i0 <= 1; S3[i0] -> q[4 + 2i0] : 0 <= i0 <= 1; S6[i0] -> q[15 + 4i0] : 0 <= i0 <= 1; S6[i0] -> q[4 + 13i0] : 0 <= i0 <= 1; S9[i0] -> q[13 + 2i0] : 0 <= i0 <= 1; S9[i0] -> q[5 + i0] : 0 <= i0 <= 1; S15[i0] -> q[19 - 15i0] : 0 <= i0 <= 1; S15[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S16[i0] -> q[16 + 3i0] : 0 <= i0 <= 1; S16[i0] -> q[4 + i0] : 0 <= i0 <= 1; S17[i0] -> q[13] : 0 <= i0 <= 1; S17[i0] -> q[4 + i0] : 0 <= i0 <= 1; S18[i0] -> q[13 + 6i0] : 0 <= i0 <= 1; S18[i0] -> q[4 + 4i0] : 0 <= i0 <= 1; S4[i0] -> q[3 + 9i0] : 0 <= i0 <= 1; S4[i0] -> q[9i0] : 0 <= i0 <= 1; S11[i0] -> q[8 - 2i0] : 0 <= i0 <= 1; S11[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S7[i0] -> q[15 + 2i0] : 0 <= i0 <= 1; S7[i0] -> q[4 + 10i0] : 0 <= i0 <= 1; S5[i0] -> q[19 - 6i0] : 0 <= i0 <= 1; S5[i0] -> q[5 + 4i0] : 0 <= i0 <= 1; S13[i0] -> q[6] : 0 <= i0 <= 1; S13[i0] -> q[3i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[10 - 6i0 - 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> q[9 - 3i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0] -> q[19 - 14i0] : 0 <= i0 <= 1; S10[i0] -> q[10 + 3i0] : 0 <= i0 <= 1; S8[i0] -> q[6] : 0 <= i0 <= 1; S8[i0] -> q[2 + 11i0] : 0 <= i0 <= 1; S2[i0, i1] -> q[3 + 3i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> q[4i0 + 8i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S14[i0] -> q[19 - 15i0] : 0 <= i0 <= 1; S14[i0] -> q[5 + i0] : 0 <= i0 <= 1; S19[i0] -> q[19 - 13i0] : 0 <= i0 <= 1; S19[i0] -> q[5 + 8i0] : 0 <= i0 <= 1 }

Write := { S12[i0] -> q[2i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[3 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S20[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S3[i0] -> q[4 + 2i0] : 0 <= i0 <= 1; S6[i0] -> q[15 + 4i0] : 0 <= i0 <= 1; S9[i0] -> q[13 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S16[i0] -> q[4 + i0] : 0 <= i0 <= 1; S17[i0] -> q[13] : 0 <= i0 <= 1; S18[i0] -> q[13 + 6i0] : 0 <= i0 <= 1; S4[i0] -> q[3 + 9i0] : 0 <= i0 <= 1; S11[i0] -> q[5 + 8i0] : 0 <= i0 <= 1; S7[i0] -> q[15 + 2i0] : 0 <= i0 <= 1; S5[i0] -> q[5 + 4i0] : 0 <= i0 <= 1; S13[i0] -> q[6] : 0 <= i0 <= 1; S1[i0, i1] -> q[9 - 3i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0] -> q[10 + 3i0] : 0 <= i0 <= 1; S8[i0] -> q[2 + 11i0] : 0 <= i0 <= 1; S2[i0, i1] -> q[3 + 3i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S14[i0] -> q[5 + i0] : 0 <= i0 <= 1; S19[i0] -> q[5 + 8i0] : 0 <= i0 <= 1 }

Call := { S13[i0] -> [3i0, 6] : 0 <= i0 <= 1; S20[i0] -> [19 - 13i0, 5 + 8i0] : 0 <= i0 <= 1; S15[i0] -> [19 - 15i0, 5 + 8i0] : 0 <= i0 <= 1; S0[i0, i1] -> [4i0 + 3i1, 3 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] -> [5 + i0, 13 + 2i0] : 0 <= i0 <= 1; S4[i0] -> [9i0, 3 + 9i0] : 0 <= i0 <= 1; S8[i0] -> [6, 2 + 11i0] : 0 <= i0 <= 1; S5[i0] -> [19 - 6i0, 5 + 4i0] : 0 <= i0 <= 1; S12[i0] -> [16 - 13i0, 2i0] : 0 <= i0 <= 1; S1[i0, i1] -> [10 - 6i0 - 4i1, 9 - 3i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0] -> [4 + 13i0, 15 + 4i0] : 0 <= i0 <= 1; S3[i0] -> [16 - 16i0, 4 + 2i0] : 0 <= i0 <= 1; S18[i0] -> [4 + 4i0, 13 + 6i0] : 0 <= i0 <= 1; S14[i0] -> [19 - 15i0, 5 + i0] : 0 <= i0 <= 1; S7[i0] -> [4 + 10i0, 15 + 2i0] : 0 <= i0 <= 1; S11[i0] -> [8 - 2i0, 5 + 8i0] : 0 <= i0 <= 1; S19[i0] -> [19 - 13i0, 5 + 8i0] : 0 <= i0 <= 1; S10[i0] -> [19 - 14i0, 10 + 3i0] : 0 <= i0 <= 1; S2[i0, i1] -> [4i0 + 8i1, 3 + 3i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S17[i0] -> [4 + i0, 13] : 0 <= i0 <= 1; S16[i0] -> [16 + 3i0, 4 + i0] : 0 <= i0 <= 1 }

RecoveredSchedule := { S8[0] -> [17]; S8[1] -> [10]; S20[0] -> [42]; S20[1] -> [35]; S11[0] -> [38]; S11[1] -> [11]; S14[1] -> [12]; S14[0] -> [5]; S6[1] -> [43]; S6[0] -> [24]; S7[1] -> [44]; S7[0] -> [26]; S1[1, 0] -> [25]; S1[0, 1] -> [9]; S1[0, 0] -> [1]; S13[1] -> [32]; S13[0] -> [29]; S0[0, i1] -> [19 - i1] : 0 <= i1 <= 1; S0[1, 0] -> [16]; S3[1] -> [20]; S3[0] -> [15]; S18[1] -> [41]; S18[0] -> [27]; S5[1] -> [36]; S5[0] -> [3]; S2[1, 0] -> [34]; S2[0, 0] -> [21]; S2[0, 1] -> [4]; S10[1] -> [8]; S10[0] -> [2]; S9[1] -> [33]; S9[0] -> [7]; S17[1] -> [37]; S17[0] -> [14]; S4[0] -> [30]; S4[1] -> [0]; S12[1] -> [31]; S12[0] -> [22]; S16[1] -> [39]; S16[0] -> [23]; S15[1] -> [13]; S15[0] -> [6]; S19[0] -> [40]; S19[1] -> [28] }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 18 domains, 36 points.
2D: 3 domains, 9 points.
Total: 21 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 18
3 : 3
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:18,}
2 -> {3:3,}
------------------------------
--- Timing ---
Reconstruction: 14ms
Scheduling: 0ms
Total execution time: 14ms
-------------
