Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... Building circuit form ...  Done.
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Scheduling ... Done.
Checking

Domain := { S11[i0] : 0 <= i0 <= 1; S18[i0] : 0 <= i0 <= 1; S8[i0] : 0 <= i0 <= 1; S5[i0] : 0 <= i0 <= 1; S3[i0] : 0 <= i0 <= 1; S6[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0] : 0 <= i0 <= 1; S4[i0] : 0 <= i0 <= 1; S12[i0] : 0 <= i0 <= 1; S13[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S16[i0] : 0 <= i0 <= 1; S1[i0] : 0 <= i0 <= 1; S19[i0] : 0 <= i0 <= 1; S2[i0] : 0 <= i0 <= 1; S0[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S17[i0] : 0 <= i0 <= 1; S14[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 2 - i0 }

Read := { S12[i0] -> q[11 - 3i0] : 0 <= i0 <= 1; S12[i0] -> q[6 + i0] : 0 <= i0 <= 1; S2[i0] -> q[15 - 8i0] : 0 <= i0 <= 1; S2[i0] -> q[7 + 6i0] : 0 <= i0 <= 1; S1[i0] -> q[12 - 6i0] : 0 <= i0 <= 1; S1[i0] -> q[9 + 3i0] : 0 <= i0 <= 1; S3[i0] -> q[11 + i0] : 0 <= i0 <= 1; S3[i0] -> q[6 + 3i0] : 0 <= i0 <= 1; S9[i0] -> q[12 - 4i0] : 0 <= i0 <= 1; S9[i0] -> q[9 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[10] : 0 <= i0 <= 1; S15[i0] -> q[6 + 6i0] : 0 <= i0 <= 1; S16[i0] -> q[10] : 0 <= i0 <= 1; S16[i0] -> q[6 + 6i0] : 0 <= i0 <= 1; S17[i0] -> q[11 - 5i0] : 0 <= i0 <= 1; S17[i0] -> q[6 + 3i0] : 0 <= i0 <= 1; S18[i0] -> q[11 - 5i0] : 0 <= i0 <= 1; S18[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S4[i0] -> q[11 + i0] : 0 <= i0 <= 1; S4[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S11[i0] -> q[10 + 2i0] : 0 <= i0 <= 1; S11[i0] -> q[6] : 0 <= i0 <= 1; S7[i0] -> q[9 + i0] : 0 <= i0 <= 1; S7[i0] -> q[6 + 6i0] : 0 <= i0 <= 1; S5[i0] -> q[13 - i0] : 0 <= i0 <= 1; S5[i0] -> q[9 + i0] : 0 <= i0 <= 1; S0[i0] -> q[7 + i0] : 0 <= i0 <= 1; S0[i0] -> q[6] : 0 <= i0 <= 1; S13[i0] -> q[10 + 2i0] : 0 <= i0 <= 1; S13[i0] -> q[6] : 0 <= i0 <= 1; S14[i0, i1] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 2 - i0; S14[i0, i1] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 2 - i0; S10[i0] -> q[12 - 6i0] : 0 <= i0 <= 1; S10[i0] -> q[9 + i0] : 0 <= i0 <= 1; S8[i0] -> q[9 + i0] : 0 <= i0 <= 1; S8[i0] -> q[6] : 0 <= i0 <= 1; S19[i0] -> q[o0] : 0 <= i0 <= 1 and 6 + 3i0 <= o0 <= 7 + 3i0; S6[i0, i1] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

Write := { S12[i0] -> q[6 + i0] : 0 <= i0 <= 1; S2[i0] -> q[7 + 6i0] : 0 <= i0 <= 1; S1[i0] -> q[9 + 3i0] : 0 <= i0 <= 1; S3[i0] -> q[6 + 3i0] : 0 <= i0 <= 1; S9[i0] -> q[9 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[10] : 0 <= i0 <= 1; S16[i0] -> q[10] : 0 <= i0 <= 1; S17[i0] -> q[6 + 3i0] : 0 <= i0 <= 1; S18[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S4[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S11[i0] -> q[10 + 2i0] : 0 <= i0 <= 1; S7[i0] -> q[9 + i0] : 0 <= i0 <= 1; S5[i0] -> q[9 + i0] : 0 <= i0 <= 1; S0[i0] -> q[6] : 0 <= i0 <= 1; S13[i0] -> q[10 + 2i0] : 0 <= i0 <= 1; S14[i0, i1] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 2 - i0; S10[i0] -> q[9 + i0] : 0 <= i0 <= 1; S8[i0] -> q[9 + i0] : 0 <= i0 <= 1; S19[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S6[i0, i1] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

Call := { S13[i0] -> [6, 10 + 2i0] : 0 <= i0 <= 1; S15[i0] -> [6 + 6i0, 10] : 0 <= i0 <= 1; S6[i0, i1] -> [6 + 3i1, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0] -> [15 - 8i0, 7 + 6i0] : 0 <= i0 <= 1; S9[i0] -> [12 - 4i0, 9 + 2i0] : 0 <= i0 <= 1; S4[i0] -> [11 + i0, 6 + 4i0] : 0 <= i0 <= 1; S8[i0] -> [6, 9 + i0] : 0 <= i0 <= 1; S5[i0] -> [13 - i0, 9 + i0] : 0 <= i0 <= 1; S12[i0] -> [11 - 3i0, 6 + i0] : 0 <= i0 <= 1; S14[i0, i1] -> [6 + 3i1, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 2 - i0; S0[i0] -> [7 + i0, 6] : 0 <= i0 <= 1; S3[i0] -> [11 + i0, 6 + 3i0] : 0 <= i0 <= 1; S18[i0] -> [11 - 5i0, 6 + 4i0] : 0 <= i0 <= 1; S19[i0] -> [7 + 2i0, 6 + 4i0] : 0 <= i0 <= 1; S7[i0] -> [6 + 6i0, 9 + i0] : 0 <= i0 <= 1; S11[i0] -> [6, 10 + 2i0] : 0 <= i0 <= 1; S1[i0] -> [12 - 6i0, 9 + 3i0] : 0 <= i0 <= 1; S10[i0] -> [12 - 6i0, 9 + i0] : 0 <= i0 <= 1; S16[i0] -> [6 + 6i0, 10] : 0 <= i0 <= 1; S17[i0] -> [11 - 5i0, 6 + 3i0] : 0 <= i0 <= 1 }

RecoveredSchedule := { S8[0] -> [26]; S8[1] -> [5]; S14[1, i1] -> [43 + i1] : 0 <= i1 <= 1; S14[0, 2] -> [39]; S14[0, 1] -> [31]; S14[0, 0] -> [22]; S6[1, 0] -> [42]; S6[1, 1] -> [38]; S6[0, 1] -> [23]; S6[0, 0] -> [3]; S11[1] -> [27]; S11[0] -> [7]; S7[0] -> [25]; S7[1] -> [20]; S0[0] -> [4]; S0[1] -> [2]; S13[1] -> [28]; S13[0] -> [21]; S1[i0] -> [i0] : 0 <= i0 <= 1; S3[1] -> [17]; S3[0] -> [8]; S18[1] -> [36]; S18[0] -> [34]; S2[i0] -> [14 + i0] : 0 <= i0 <= 1; S5[1] -> [19]; S5[0] -> [16]; S17[1] -> [35]; S17[0] -> [33]; S10[0] -> [30]; S10[1] -> [6]; S12[1] -> [12]; S12[0] -> [10]; S9[0] -> [29]; S9[1] -> [11]; S4[1] -> [18]; S4[0] -> [9]; S19[1] -> [37]; S19[0] -> [13]; S16[1] -> [41]; S16[0] -> [32]; S15[1] -> [40]; S15[0] -> [24] }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 18 domains, 36 points.
2D: 2 domains, 9 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 18
4 : 1
5 : 1
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:18,}
2 -> {4:1,5:1,}
------------------------------
--- Timing ---
Reconstruction: 14ms
Scheduling: 0ms
Total execution time: 14ms
-------------
