Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... Building circuit form ...  Done.
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Scheduling ... Done.
Checking

Domain := { S11[i0] : 0 <= i0 <= 1; S17[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0] : 0 <= i0 <= 1; S5[i0] : 0 <= i0 <= 1; S21[i0] : 0 <= i0 <= 1; S9[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S3[i0] : 0 <= i0 <= 1; S20[i0] : 0 <= i0 <= 1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0] : 0 <= i0 <= 1; S14[i0] : 0 <= i0 <= 1; S12[i0] : 0 <= i0 <= 1; S13[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S1[i0] : 0 <= i0 <= 1; S6[i0] : 0 <= i0 <= 1; S2[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S19[i0] : 0 <= i0 <= 1 }

Read := { S12[i0] -> q[8 + 3i0] : 0 <= i0 <= 1; S12[i0] -> q[5 + 2i0] : 0 <= i0 <= 1; S2[i0] -> q[16 - 10i0] : 0 <= i0 <= 1; S2[i0] -> q[8 + 10i0] : 0 <= i0 <= 1; S1[i0] -> q[7 + 4i0] : 0 <= i0 <= 1; S1[i0] -> q[2 + 6i0] : 0 <= i0 <= 1; S21[i0] -> q[15 + 3i0] : 0 <= i0 <= 1; S21[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S20[i0] -> q[15] : 0 <= i0 <= 1; S20[i0] -> q[7 + 11i0] : 0 <= i0 <= 1; S3[i0] -> q[16 - 10i0] : 0 <= i0 <= 1; S3[i0] -> q[8 + 10i0] : 0 <= i0 <= 1; S6[i0] -> q[13 + 3i0] : 0 <= i0 <= 1; S6[i0] -> q[11 + i0] : 0 <= i0 <= 1; S15[i0] -> q[18 - 7i0] : 0 <= i0 <= 1; S15[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S17[i0, i1] -> q[18 - 12i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S17[i0, i1] -> q[7 + 11i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0] -> q[16 + 2i0] : 0 <= i0 <= 1; S4[i0] -> q[13 - 7i0] : 0 <= i0 <= 1; S11[i0] -> q[15 + 3i0] : 0 <= i0 <= 1; S11[i0] -> q[10 + i0] : 0 <= i0 <= 1; S7[i0] -> q[13 + 5i0] : 0 <= i0 <= 1; S7[i0] -> q[11] : 0 <= i0 <= 1; S9[i0, i1] -> q[15 - 8i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, i1] -> q[11 + 7i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S5[i0] -> q[13 + 5i0] : 0 <= i0 <= 1; S5[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S13[i0] -> q[8 + 10i0] : 0 <= i0 <= 1; S13[i0] -> q[5 + 6i0] : 0 <= i0 <= 1; S10[i0] -> q[16 + 2i0] : 0 <= i0 <= 1; S10[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S8[i0] -> q[15] : 0 <= i0 <= 1; S8[i0] -> q[7 + 4i0] : 0 <= i0 <= 1; S14[i0] -> q[11] : 0 <= i0 <= 1; S14[i0] -> q[7 + i0] : 0 <= i0 <= 1; S19[i0] -> q[5 + 13i0] : 0 <= i0 <= 1; S19[i0] -> q[4 + 3i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[8 + 10i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[5 + 10i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Write := { S12[i0] -> q[5 + 2i0] : 0 <= i0 <= 1; S2[i0] -> q[8 + 10i0] : 0 <= i0 <= 1; S1[i0] -> q[2 + 6i0] : 0 <= i0 <= 1; S21[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S20[i0] -> q[15] : 0 <= i0 <= 1; S3[i0] -> q[8 + 10i0] : 0 <= i0 <= 1; S6[i0] -> q[11 + i0] : 0 <= i0 <= 1; S15[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S17[i0, i1] -> q[7 + 11i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0] -> q[16 + 2i0] : 0 <= i0 <= 1; S11[i0] -> q[10 + i0] : 0 <= i0 <= 1; S7[i0] -> q[11] : 0 <= i0 <= 1; S9[i0, i1] -> q[15 - 8i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S5[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S13[i0] -> q[5 + 6i0] : 0 <= i0 <= 1; S10[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S8[i0] -> q[15] : 0 <= i0 <= 1; S14[i0] -> q[7 + i0] : 0 <= i0 <= 1; S19[i0] -> q[4 + 3i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[5 + 10i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Call := { S13[i0] -> [8 + 10i0, 5 + 6i0] : 0 <= i0 <= 1; S21[i0] -> [15 + 3i0, 4 + 11i0] : 0 <= i0 <= 1; S15[i0] -> [18 - 7i0, 11 + 4i0] : 0 <= i0 <= 1; S0[i0, i1] -> [8 + 10i0 + 3i1, 5 + 10i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0] -> [16 - 10i0, 8 + 10i0] : 0 <= i0 <= 1; S4[i0] -> [13 - 7i0, 16 + 2i0] : 0 <= i0 <= 1; S8[i0] -> [7 + 4i0, 15] : 0 <= i0 <= 1; S5[i0] -> [13 + 5i0, 11 + 4i0] : 0 <= i0 <= 1; S12[i0] -> [8 + 3i0, 5 + 2i0] : 0 <= i0 <= 1; S6[i0] -> [13 + 3i0, 11 + i0] : 0 <= i0 <= 1; S3[i0] -> [16 - 10i0, 8 + 10i0] : 0 <= i0 <= 1; S19[i0] -> [5 + 13i0, 4 + 3i0] : 0 <= i0 <= 1; S14[i0] -> [11, 7 + i0] : 0 <= i0 <= 1; S7[i0] -> [13 + 5i0, 11] : 0 <= i0 <= 1; S11[i0] -> [15 + 3i0, 10 + i0] : 0 <= i0 <= 1; S9[i0, i1] -> [11 + 7i1, 15 - 8i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0] -> [7 + 4i0, 2 + 6i0] : 0 <= i0 <= 1; S10[i0] -> [16 + 2i0, 11 + 4i0] : 0 <= i0 <= 1; S20[i0] -> [7 + 11i0, 15] : 0 <= i0 <= 1; S17[i0, i1] -> [18 - 12i1, 7 + 11i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

RecoveredSchedule := { S8[0] -> [9]; S8[1] -> [7]; S20[0] -> [43]; S20[1] -> [40]; S21[1] -> [41]; S21[0] -> [0]; S11[1] -> [14]; S11[0] -> [8]; S9[1, 1] -> [33]; S9[1, 0] -> [29]; S9[0, 0] -> [10]; S9[0, 1] -> [3]; S7[0] -> [31]; S7[1] -> [2]; S14[1] -> [23]; S14[0] -> [15]; S6[0] -> [28]; S6[1] -> [26]; S13[1] -> [30]; S13[0] -> [20]; S17[i0, 1] -> [36 + i0] : 0 <= i0 <= 1; S17[1, 0] -> [38]; S17[0, 0] -> [34]; S0[1, 0] -> [42]; S0[0, 0] -> [17]; S0[0, 1] -> [12]; S3[0] -> [22]; S3[1] -> [5]; S1[0] -> [44]; S1[1] -> [16]; S2[0] -> [21]; S2[1] -> [4]; S5[0] -> [24]; S5[1] -> [1]; S10[0] -> [27]; S10[1] -> [6]; S12[0] -> [19]; S12[1] -> [11]; S19[1] -> [39]; S19[0] -> [18]; S4[1] -> [35]; S4[0] -> [25]; S15[0] -> [32]; S15[1] -> [13] }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 17 domains, 34 points.
2D: 3 domains, 11 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 17
3 : 1
4 : 2
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:17,}
2 -> {3:1,4:2,}
------------------------------
--- Timing ---
Reconstruction: 14ms
Scheduling: 0ms
Total execution time: 14ms
-------------
