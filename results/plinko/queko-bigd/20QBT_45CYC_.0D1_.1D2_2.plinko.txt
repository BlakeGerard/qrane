Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... Building circuit form ...  Done.
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Scheduling ... Done.
Checking

Domain := { S11[i0] : 0 <= i0 <= 1; S18[i0] : 0 <= i0 <= 1; S3[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S8[i0] : 0 <= i0 <= 1; S4[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] : 0 <= i0 <= 1; S5[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S14[i0] : 0 <= i0 <= 1; S12[i0] : 0 <= i0 <= 1; S13[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S16[i0] : 0 <= i0 <= 1; S6[i0] : 0 <= i0 <= 1; S19[i0] : 0 <= i0 <= 1; S2[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S17[i0] : 0 <= i0 <= 1; S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Read := { S12[i0] -> q[12 + 3i0] : 0 <= i0 <= 1; S12[i0] -> q[2 - i0] : 0 <= i0 <= 1; S2[i0] -> q[6 + 4i0] : 0 <= i0 <= 1; S2[i0] -> q[1 + 16i0] : 0 <= i0 <= 1; S5[i0, i1] -> q[13 - 12i0 - 9i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S5[i0, i1] -> q[7 + 8i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[13 + 2i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[9 - 8i0 + 2i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0] -> q[16 - 14i0] : 0 <= i0 <= 1; S6[i0] -> q[9 + 2i0] : 0 <= i0 <= 1; S9[i0] -> q[3 - 2i0] : 0 <= i0 <= 1; S9[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[15 - 13i0] : 0 <= i0 <= 1; S15[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S16[i0] -> q[2] : 0 <= i0 <= 1; S16[i0] -> q[1 + 14i0] : 0 <= i0 <= 1; S17[i0] -> q[4] : 0 <= i0 <= 1; S17[i0] -> q[2 + 13i0] : 0 <= i0 <= 1; S18[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S18[i0] -> q[1 + 14i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[15 - 14i0 - 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> q[2 + 13i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S11[i0] -> q[4 + 9i0] : 0 <= i0 <= 1; S11[i0] -> q[1 + 10i0] : 0 <= i0 <= 1; S7[i0] -> q[12 - i0] : 0 <= i0 <= 1; S7[i0] -> q[7 + 10i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[6 - 5i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> q[1 + 14i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S13[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S13[i0] -> q[3 - 2i0] : 0 <= i0 <= 1; S10[i0] -> q[15 - 2i0] : 0 <= i0 <= 1; S10[i0] -> q[4 + 3i0] : 0 <= i0 <= 1; S8[i0] -> q[12 + 3i0] : 0 <= i0 <= 1; S8[i0] -> q[2 - i0] : 0 <= i0 <= 1; S14[i0] -> q[15 - 4i0] : 0 <= i0 <= 1; S14[i0] -> q[4 + 8i0] : 0 <= i0 <= 1; S19[i0] -> q[15 - 14i0] : 0 <= i0 <= 1; S19[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[12 + 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[11 - 10i0] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Write := { S12[i0] -> q[12 + 3i0] : 0 <= i0 <= 1; S2[i0] -> q[1 + 16i0] : 0 <= i0 <= 1; S5[i0, i1] -> q[7 + 8i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[13 + 2i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0] -> q[9 + 2i0] : 0 <= i0 <= 1; S9[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S16[i0] -> q[2] : 0 <= i0 <= 1; S17[i0] -> q[4] : 0 <= i0 <= 1; S18[i0] -> q[2 + 2i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[2 + 13i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S11[i0] -> q[4 + 9i0] : 0 <= i0 <= 1; S7[i0] -> q[7 + 10i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[1 + 14i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S13[i0] -> q[11 + 4i0] : 0 <= i0 <= 1; S10[i0] -> q[4 + 3i0] : 0 <= i0 <= 1; S8[i0] -> q[12 + 3i0] : 0 <= i0 <= 1; S14[i0] -> q[4 + 8i0] : 0 <= i0 <= 1; S19[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[12 + 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Call := { S13[i0] -> [3 - 2i0, 11 + 4i0] : 0 <= i0 <= 1; S5[i0, i1] -> [13 - 12i0 - 9i1, 7 + 8i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S15[i0] -> [15 - 13i0, 2 + 2i0] : 0 <= i0 <= 1; S0[i0, i1] -> [11 - 10i0, 12 + 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [15 - 14i0 - 11i1, 2 + 13i0 + 16i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0] -> [6 + 4i0, 1 + 16i0] : 0 <= i0 <= 1; S9[i0] -> [3 - 2i0, 2 + 2i0] : 0 <= i0 <= 1; S8[i0] -> [2 - i0, 12 + 3i0] : 0 <= i0 <= 1; S1[i0, i1] -> [6 - 5i0 + 3i1, 1 + 14i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S12[i0] -> [2 - i0, 12 + 3i0] : 0 <= i0 <= 1; S4[i0, i1] -> [9 - 8i0 + 2i1, 13 + 2i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0] -> [16 - 14i0, 9 + 2i0] : 0 <= i0 <= 1; S18[i0] -> [1 + 14i0, 2 + 2i0] : 0 <= i0 <= 1; S19[i0] -> [15 - 14i0, 4 + 11i0] : 0 <= i0 <= 1; S14[i0] -> [15 - 4i0, 4 + 8i0] : 0 <= i0 <= 1; S7[i0] -> [12 - i0, 7 + 10i0] : 0 <= i0 <= 1; S11[i0] -> [1 + 10i0, 4 + 9i0] : 0 <= i0 <= 1; S10[i0] -> [15 - 2i0, 4 + 3i0] : 0 <= i0 <= 1; S17[i0] -> [2 + 13i0, 4] : 0 <= i0 <= 1; S16[i0] -> [1 + 14i0, 2] : 0 <= i0 <= 1 }

RecoveredSchedule := { S4[1, 0] -> [39]; S4[0, 1] -> [11]; S4[0, 0] -> [7]; S8[1] -> [19]; S8[0] -> [15]; S6[0] -> [6]; S6[1] -> [3]; S11[0] -> [24]; S11[1] -> [10]; S7[1] -> [13]; S7[0] -> [0]; S14[0] -> [25]; S14[1] -> [14]; S3[1, 0] -> [38]; S3[0, 1] -> [21]; S3[0, 0] -> [18]; S13[1] -> [26]; S13[0] -> [2]; S1[1, 0] -> [44]; S1[0, 0] -> [42]; S1[0, 1] -> [5]; S0[1, 0] -> [37]; S0[0, 1] -> [4]; S0[0, 0] -> [1]; S18[0] -> [40]; S18[1] -> [33]; S2[0] -> [43]; S2[1] -> [12]; S17[0] -> [35]; S17[1] -> [31]; S10[0] -> [20]; S10[1] -> [9]; S5[1, 0] -> [41]; S5[0, 1] -> [34]; S5[0, 0] -> [8]; S9[1] -> [22]; S9[0] -> [16]; S12[1] -> [23]; S12[0] -> [17]; S16[1] -> [30]; S16[0] -> [27]; S19[0] -> [36]; S19[1] -> [32]; S15[i0] -> [29 - i0] : 0 <= i0 <= 1 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 15 domains, 30 points.
2D: 5 domains, 15 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 15
3 : 5
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:15,}
2 -> {3:5,}
------------------------------
--- Timing ---
Reconstruction: 19ms
Scheduling: 0ms
Total execution time: 19ms
-------------
