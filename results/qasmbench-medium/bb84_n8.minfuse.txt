Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... 
Frontr: 10 8 6 5 3 1 0 
Chosen: 0 1 3 5 6 8 
Frontr: 12 10 9 7 4 2 
Chosen: 2 7 10 
Frontr: 12 11 9 4 
Chosen: 4 11 
Frontr: 12 9 
Chosen: 9 
Frontr: 12 
Chosen: 12 
Frontr: 13 
Chosen: 13 
Frontr: 14 
Chosen: 14 
Frontr: 15 
Chosen: 15 
Frontr: 16 
Chosen: 16 
Frontr: 17 
Chosen: 17 
Frontr: 18 
Chosen: 18 
Frontr: 19 
Chosen: 19 
Frontr: 20 
Chosen: 20 
Frontr: 21 
Chosen: 21 
Frontr: 22 
Chosen: 22 
Frontr: 23 
Chosen: 23 
Frontr: 24 
Chosen: 24 
Frontr: 25 
Chosen: 25 
Frontr: 26 
Chosen: 26 
Frontr: 27 
Chosen: 27 
Frontr: 28 
Chosen: 28 
Frontr: 29 
Chosen: 29 
Frontr: 30 
Chosen: 30 
Frontr: 31 
Chosen: 31 
Frontr: 32 
Chosen: 32 
Frontr: 33 
Chosen: 33 
Frontr: 34 
Chosen: 34 
Frontr: 35 
Chosen: 35 
Frontr: 36 
Chosen: 36 
Frontr: 37 
Chosen: 37 
Frontr: 38 
Chosen: 38 
Frontr: 39 
Chosen: 39 
Frontr: 40 
Chosen: 40 
Frontr: 41 
Chosen: 41 
Frontr: 42 
Chosen: 42 
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Domain := { S18[0]; S3[0]; S1[i0] : 0 <= i0 <= 2; S17[0]; S12[0]; S31[0]; S8[0]; S28[0]; S7[0]; S20[0]; S15[0]; S29[0]; S4[i0, 0] : 0 <= i0 <= 1; S23[0]; S13[0]; S6[0]; S19[0]; S30[0]; S32[0]; S25[0]; S26[0]; S14[0]; S21[0]; S16[0]; S24[0]; S2[i0] : 0 <= i0 <= 1; S11[0]; S22[0]; S9[0]; S5[0]; S10[0]; S27[0]; S0[0, i1] : 0 <= i1 <= 5; S0[1, 0] }

Read := { S3[i0 = 0] -> q[5]; S13[i0 = 0] -> q[3]; S13[i0 = 0] -> q[0]; S11[i0 = 0] -> q[3]; S7[i0 = 0] -> q[0]; S17[i0 = 0] -> q[o0] : 0 <= o0 <= 1; S22[i0 = 0] -> q[2]; S22[i0 = 0] -> q[0]; S2[i0] -> q[2 + 5i0] : 0 <= i0 <= 1; S31[i0 = 0] -> q[7]; S31[i0 = 0] -> q[0]; S19[i0 = 0] -> q[2]; S26[i0 = 0] -> q[4]; S15[i0 = 0] -> q[1]; S16[i0 = 0] -> q[1]; S18[i0 = 0] -> q[2]; S18[i0 = 0] -> q[0]; S23[i0 = 0] -> q[4]; S23[i0 = 0] -> q[0]; S21[i0 = 0] -> q[2]; S28[i0 = 0] -> q[5]; S28[i0 = 0] -> q[0]; S1[i0] -> q[1 + 3i0] : 0 <= i0 <= 2; S9[i0 = 0] -> q[0]; S14[i0 = 0] -> q[o0] : 0 <= o0 <= 1; S8[i0 = 0] -> q[0]; S32[i0 = 0] -> q[7]; S0[i0 = 0, i1] -> q[i1] : 0 <= i1 <= 5; S0[i0 = 1, i1 = 0] -> q[7]; S20[i0 = 0] -> q[2]; S5[i0 = 0] -> q[6]; S12[i0 = 0] -> q[3]; S24[i0 = 0] -> q[4]; S6[i0 = 0] -> q[6]; S6[i0 = 0] -> q[0]; S25[i0 = 0] -> q[4]; S10[i0 = 0] -> q[3]; S10[i0 = 0] -> q[0]; S29[i0 = 0] -> q[5]; S4[i0, i1 = 0] -> q[6 + i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[0] : 0 <= i0 <= 1; S30[i0 = 0] -> q[5]; S30[i0 = 0] -> q[0]; S27[i0 = 0] -> q[4]; S27[i0 = 0] -> q[0] }

Write := { S3[i0 = 0] -> q[5]; S13[i0 = 0] -> q[0]; S11[i0 = 0] -> q[3]; S7[i0 = 0] -> q[0]; S17[i0 = 0] -> q[0]; S22[i0 = 0] -> q[0]; S2[i0] -> q[2 + 5i0] : 0 <= i0 <= 1; S31[i0 = 0] -> q[0]; S19[i0 = 0] -> q[2]; S26[i0 = 0] -> q[4]; S15[i0 = 0] -> q[1]; S16[i0 = 0] -> q[1]; S18[i0 = 0] -> q[0]; S23[i0 = 0] -> q[0]; S21[i0 = 0] -> q[2]; S28[i0 = 0] -> q[0]; S1[i0] -> q[1 + 3i0] : 0 <= i0 <= 2; S9[i0 = 0] -> q[0]; S14[i0 = 0] -> q[0]; S8[i0 = 0] -> q[0]; S32[i0 = 0] -> q[7]; S0[i0 = 0, i1] -> q[i1] : 0 <= i1 <= 5; S0[i0 = 1, i1 = 0] -> q[7]; S20[i0 = 0] -> q[2]; S5[i0 = 0] -> q[6]; S12[i0 = 0] -> q[3]; S24[i0 = 0] -> q[4]; S6[i0 = 0] -> q[0]; S25[i0 = 0] -> q[4]; S10[i0 = 0] -> q[0]; S29[i0 = 0] -> q[5]; S4[i0, i1 = 0] -> q[0] : 0 <= i0 <= 1; S30[i0 = 0] -> q[0]; S27[i0 = 0] -> q[0] }

Call := { S5[i0 = 0] -> [6]; S23[i0 = 0] -> [4, 0]; S32[i0 = 0] -> [7]; S13[i0 = 0] -> [3, 0]; S18[i0 = 0] -> [2, 0]; S26[i0 = 0] -> [4]; S8[i0 = 0] -> [0]; S17[i0 = 0] -> [1, 0]; S1[i0] -> [1 + 3i0] : 0 <= i0 <= 2; S11[i0 = 0] -> [3]; S19[i0 = 0] -> [2]; S14[i0 = 0] -> [1, 0]; S2[i0] -> [2 + 5i0] : 0 <= i0 <= 1; S3[i0 = 0] -> [5]; S15[i0 = 0] -> [1]; S6[i0 = 0] -> [6, 0]; S21[i0 = 0] -> [2]; S28[i0 = 0] -> [5, 0]; S10[i0 = 0] -> [3, 0]; S0[i0 = 0, i1] -> [i1] : 0 <= i1 <= 5; S0[i0 = 1, i1 = 0] -> [7]; S4[i0, i1 = 0] -> [6 + i0, 0] : 0 <= i0 <= 1; S22[i0 = 0] -> [2, 0]; S31[i0 = 0] -> [7, 0]; S25[i0 = 0] -> [4]; S9[i0 = 0] -> [0, 0]; S12[i0 = 0] -> [3]; S30[i0 = 0] -> [5, 0]; S27[i0 = 0] -> [4, 0]; S20[i0 = 0] -> [2]; S16[i0 = 0] -> [1]; S24[i0 = 0] -> [4]; S7[i0 = 0] -> [0, 0]; S29[i0 = 0] -> [5] }

DataDependencies := { S2[1] -> S31[0]; S18[0] -> S22[0]; S30[0] -> S31[0]; S27[0] -> S28[0]; S10[0] -> S11[0]; S32[0] -> S0[1, 0]; S14[0] -> S17[0]; S26[0] -> S27[0]; S14[0] -> S15[0]; S10[0] -> S13[0]; S18[0] -> S19[0]; S22[0] -> S23[0]; S2[0] -> S18[0]; S15[0] -> S16[0]; S23[0] -> S24[0]; S6[0] -> S7[0]; S0[i0, 0] -> S4[i0, 0] : 0 <= i0 <= 1; S1[2] -> S2[1]; S9[0] -> S10[0]; S0[0, 3] -> S11[0]; S20[0] -> S21[0]; S13[0] -> S14[0]; S4[0, 0] -> S5[0]; S1[1] -> S24[0]; S1[0] -> S14[0]; S8[0] -> S9[0]; S5[0] -> S6[0]; S28[0] -> S29[0]; S12[0] -> S13[0]; S21[0] -> S22[0]; S0[0, 5] -> S3[0]; S0[0, 3] -> S10[0]; S24[0] -> S25[0]; S1[1] -> S23[0]; S19[0] -> S20[0]; S0[0, 2] -> S2[0]; S7[0] -> S8[0]; S25[0] -> S26[0]; S17[0] -> S18[0]; S1[0] -> S15[0]; S28[0] -> S30[0]; S3[0] -> S29[0]; S2[1] -> S32[0]; S29[0] -> S30[0]; S23[0] -> S27[0]; S31[0] -> S4[1, 0]; S0[0, 4] -> S1[1]; S0[0, 1] -> S1[0]; S31[0] -> S32[0]; S4[0, 0] -> S6[0]; S3[0] -> S28[0]; S2[0] -> S19[0]; S16[0] -> S17[0]; S11[0] -> S12[0] }

RecoveredSchedule := { S19[0] -> [1, 1, 18]; S24[0] -> [1, 1, 23]; S25[0] -> [1, 1, 24]; S0[0, i1] -> [0, 1 - i1, 2] : 0 <= i1 <= 5; S0[1, 0] -> [1, 2, 2]; S4[i0, 0] -> [1, 1 + i0, 3] : 0 <= i0 <= 1; S23[0] -> [1, 1, 22]; S18[0] -> [1, 1, 17]; S29[0] -> [1, 1, 30]; S14[0] -> [1, 1, 13]; S5[0] -> [1, 1, 4]; S10[0] -> [1, 1, 9]; S16[0] -> [1, 1, 15]; S31[0] -> [1, 2, 0]; S8[0] -> [1, 1, 7]; S21[0] -> [1, 1, 20]; S27[0] -> [1, 1, 26]; S26[0] -> [1, 1, 25]; S6[0] -> [1, 1, 5]; S32[0] -> [1, 2, 1]; S20[0] -> [1, 1, 19]; S13[0] -> [1, 1, 12]; S1[i0] -> [0, i0, 27] : 0 <= i0 <= 2; S17[0] -> [1, 1, 16]; S22[0] -> [1, 1, 21]; S30[0] -> [1, 1, 31]; S2[i0] -> [0, 1 + i0, 28] : 0 <= i0 <= 1; S3[0] -> [0, 0, 32]; S9[0] -> [1, 1, 8]; S15[0] -> [1, 1, 14]; S7[0] -> [1, 1, 6]; S11[0] -> [1, 1, 10]; S12[0] -> [1, 1, 11]; S28[0] -> [1, 1, 29] }

--- Stats ---
Qops: 43
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 31 domains, 34 points.
2D: 2 domains, 9 points.
Total: 33 domains, 43 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
1 : 29
2 : 2
3 : 1
7 : 1
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {1:29,2:1,3:1,}
2 -> {2:1,7:1,}
------------------------------
--- Timing ---
Reconstruction: 33ms
Scheduling: 9ms
Total execution time: 43ms
-------------
