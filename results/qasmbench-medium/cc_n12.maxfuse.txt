Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ... 
Frontr: 10 9 8 7 6 5 4 3 2 1 0 
Chosen: 0 1 2 3 4 5 6 7 8 9 10 
Frontr: 11 
Chosen: 11 
Frontr: 12 25 
Chosen: 25 
Frontr: 37 12 
Chosen: 37 
Frontr: 48 12 
Chosen: 12 
Frontr: 48 13 26 
Chosen: 26 
Frontr: 48 38 13 
Chosen: 38 
Frontr: 49 48 13 
Chosen: 48 49 
Frontr: 13 
Chosen: 13 
Frontr: 14 27 
Chosen: 27 
Frontr: 39 14 
Chosen: 39 
Frontr: 51 14 
Chosen: 14 
Frontr: 51 15 28 
Chosen: 28 
Frontr: 51 40 15 
Chosen: 40 
Frontr: 52 51 15 
Chosen: 51 52 
Frontr: 15 
Chosen: 15 
Frontr: 29 16 
Chosen: 29 
Frontr: 41 16 
Chosen: 41 
Frontr: 53 16 
Chosen: 16 
Frontr: 53 30 17 
Chosen: 30 
Frontr: 53 42 17 
Chosen: 42 
Frontr: 54 53 17 
Chosen: 53 54 
Frontr: 17 
Chosen: 17 
Frontr: 31 18 
Chosen: 31 
Frontr: 18 
Chosen: 18 
Frontr: 32 19 
Chosen: 32 
Frontr: 44 19 
Chosen: 44 
Frontr: 56 19 
Chosen: 19 
Frontr: 56 33 20 
Chosen: 33 
Frontr: 56 45 20 
Chosen: 45 
Frontr: 57 56 20 
Chosen: 56 57 
Frontr: 20 
Chosen: 20 
Frontr: 34 21 
Chosen: 34 
Frontr: 46 21 
Chosen: 46 
Frontr: 58 21 
Chosen: 21 
Frontr: 58 35 22 
Chosen: 35 
Frontr: 58 47 22 
Chosen: 47 
Frontr: 58 50 22 
Chosen: 58 50 22 
Frontr: 23 
Chosen: 23 
Frontr: 24 
Chosen: 24 
Frontr: 36 
Chosen: 36 
Frontr: 43 
Chosen: 43 
Frontr: 55 
Chosen: 55 
 Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Maxfuse chosen.
computing schedule ...Done.
Checking

Domain := { S18[0]; S33[0]; S31[0]; S17[0]; S12[0]; S2[i0, 0] : 0 <= i0 <= 1; S1[i0, 0] : 0 <= i0 <= 1; S8[0]; S28[0]; S34[0]; S29[0]; S20[0]; S15[0]; S13[0]; S19[0]; S35[0]; S32[0]; S37[i0] : 0 <= i0 <= 2; S25[0]; S14[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, 0] : 0 <= i0 <= 1; S26[0]; S4[0]; S6[i0, 0] : 0 <= i0 <= 2; S21[i0] : 0 <= i0 <= 1; S16[0]; S24[0]; S11[0]; S22[0]; S9[0]; S5[0]; S10[0]; S27[0]; S0[0, i1] : 0 <= i1 <= 10; S0[1, 0]; S7[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

Read := { S13[i0 = 0] -> q[3]; S6[i0, i1 = 0] -> q[1 + 5i0] : 0 <= i0 <= 2; S11[i0 = 0] -> q[11]; S11[i0 = 0] -> q[3]; S7[i0, i1] -> q[7i0 + i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S17[i0 = 0] -> q[4]; S22[i0 = 0] -> q[11]; S22[i0 = 0] -> q[6]; S31[i0 = 0] -> q[11]; S31[i0 = 0] -> q[9]; S1[i0, i1 = 0] -> q[11] : 0 <= i0 <= 1; S1[i0, i1 = 0] -> q[6i0] : 0 <= i0 <= 1; S19[i0 = 0] -> q[5]; S26[i0 = 0] -> q[7]; S15[i0 = 0] -> q[11]; S15[i0 = 0] -> q[4]; S16[i0 = 0] -> q[4]; S33[i0 = 0] -> q[9]; S37[i0] -> q[9 + i0] : 0 <= i0 <= 2; S35[i0 = 0] -> q[10]; S28[i0 = 0] -> q[8]; S18[i0 = 0] -> q[11]; S18[i0 = 0] -> q[5]; S21[i0] -> q[4 + i0] : 0 <= i0 <= 1; S0[i0 = 0, i1] -> q[i1] : 0 <= i1 <= 10; S0[i0 = 1, i1 = 0] -> q[10]; S9[i0 = 0] -> q[2]; S32[i0 = 0] -> q[9]; S34[i0 = 0] -> q[o0] : 10 <= o0 <= 11; S8[i0 = 0] -> q[11]; S8[i0 = 0] -> q[2]; S20[i0 = 0] -> q[5]; S5[i0 = 0] -> q[1]; S12[i0 = 0] -> q[3]; S4[i0 = 0] -> q[11]; S4[i0 = 0] -> q[1]; S2[i0, i1 = 0] -> q[11i0] : 0 <= i0 <= 1; S24[i0 = 0] -> q[11]; S24[i0 = 0] -> q[7]; S29[i0 = 0] -> q[8]; S25[i0 = 0] -> q[7]; S10[i0 = 0] -> q[2]; S3[i0, i1 = 0] -> q[6i0] : 0 <= i0 <= 1; S14[i0, i1] -> q[2 + 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S27[i0 = 0] -> q[11]; S27[i0 = 0] -> q[8] }

Write := { S13[i0 = 0] -> q[3]; S6[i0, i1 = 0] -> q[1 + 5i0] : 0 <= i0 <= 2; S11[i0 = 0] -> q[11]; S7[i0, i1] -> q[7i0 + i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S17[i0 = 0] -> q[4]; S22[i0 = 0] -> q[11]; S31[i0 = 0] -> q[11]; S1[i0, i1 = 0] -> q[11] : 0 <= i0 <= 1; S19[i0 = 0] -> q[5]; S26[i0 = 0] -> q[7]; S15[i0 = 0] -> q[11]; S16[i0 = 0] -> q[4]; S33[i0 = 0] -> q[9]; S37[i0] -> q[9 + i0] : 0 <= i0 <= 2; S35[i0 = 0] -> q[10]; S28[i0 = 0] -> q[8]; S18[i0 = 0] -> q[11]; S21[i0] -> q[4 + i0] : 0 <= i0 <= 1; S0[i0 = 0, i1] -> q[i1] : 0 <= i1 <= 10; S0[i0 = 1, i1 = 0] -> q[10]; S9[i0 = 0] -> q[2]; S32[i0 = 0] -> q[9]; S34[i0 = 0] -> q[11]; S8[i0 = 0] -> q[11]; S20[i0 = 0] -> q[5]; S5[i0 = 0] -> q[1]; S12[i0 = 0] -> q[3]; S4[i0 = 0] -> q[11]; S2[i0, i1 = 0] -> q[11i0] : 0 <= i0 <= 1; S24[i0 = 0] -> q[11]; S29[i0 = 0] -> q[8]; S25[i0 = 0] -> q[7]; S10[i0 = 0] -> q[2]; S3[i0, i1 = 0] -> q[6i0] : 0 <= i0 <= 1; S14[i0, i1] -> q[2 + 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S27[i0 = 0] -> q[11] }

Call := { S33[i0 = 0] -> [9]; S35[i0 = 0] -> [10]; S7[i0, i1] -> [7i0 + i1, 7i0 + i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S29[i0 = 0] -> [8]; S5[i0 = 0] -> [1]; S14[i0, i1] -> [2 + 4i0 + i1, 2 + 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1 = 0] -> [6i0] : 0 <= i0 <= 1; S9[i0 = 0] -> [2]; S32[i0 = 0] -> [9]; S18[i0 = 0] -> [5, 11]; S26[i0 = 0] -> [7]; S13[i0 = 0] -> [3]; S6[i0, i1 = 0] -> [1 + 5i0] : 0 <= i0 <= 2; S37[i0] -> [9 + i0, 9 + i0] : 0 <= i0 <= 2; S4[i0 = 0] -> [1, 11]; S19[i0 = 0] -> [5]; S24[i0 = 0] -> [7, 11]; S15[i0 = 0] -> [4, 11]; S28[i0 = 0] -> [8]; S1[i0, i1 = 0] -> [6i0, 11] : 0 <= i0 <= 1; S0[i0 = 0, i1] -> [i1] : 0 <= i1 <= 10; S0[i0 = 1, i1 = 0] -> [10]; S22[i0 = 0] -> [6, 11]; S31[i0 = 0] -> [9, 11]; S25[i0 = 0] -> [7]; S17[i0 = 0] -> [4]; S12[i0 = 0] -> [3]; S21[i0] -> [4 + i0, 4 + i0] : 0 <= i0 <= 1; S27[i0 = 0] -> [8, 11]; S20[i0 = 0] -> [5]; S10[i0 = 0] -> [2]; S16[i0 = 0] -> [4]; S34[i0 = 0] -> [10, 11]; S2[i0, i1 = 0] -> [11i0] : 0 <= i0 <= 1; S11[i0 = 0] -> [3, 11]; S8[i0 = 0] -> [2, 11] }

DataDependencies := { S4[0] -> S5[0]; S4[0] -> S8[0]; S3[0, 0] -> S7[0, 0]; S18[0] -> S22[0]; S0[0, 0] -> S1[0, 0]; S13[0] -> S14[0, 1]; S27[0] -> S28[0]; S31[0] -> S34[0]; S0[0, 1] -> S4[0]; S0[0, 7] -> S25[0]; S2[0, 0] -> S3[0, 0]; S18[0] -> S19[0]; S1[1, 0] -> S3[1, 0]; S33[0] -> S37[0]; S34[0] -> S37[2]; S5[0] -> S6[0, 0]; S6[1, 0] -> S3[1, 0]; S32[0] -> S33[0]; S6[1, 0] -> S1[1, 0]; S6[2, 0] -> S2[1, 0]; S15[0] -> S16[0]; S0[0, 5] -> S19[0]; S35[0] -> S0[1, 0]; S0[0, 9] -> S32[0]; S11[0] -> S15[0]; S6[0, 0] -> S7[0, 1]; S17[0] -> S21[0]; S0[0, 10] -> S34[0]; S9[0] -> S10[0]; S0[0, 3] -> S11[0]; S37[2] -> S6[2, 0]; S34[0] -> S35[0]; S20[0] -> S21[1]; S2[1, 0] -> S1[1, 0]; S0[0, 6] -> S6[1, 0]; S0[0, 2] -> S9[0]; S0[0, 4] -> S16[0]; S10[0] -> S14[0, 0]; S0[0, 8] -> S28[0]; S8[0] -> S9[0]; S28[0] -> S29[0]; S12[0] -> S13[0]; S22[0] -> S24[0]; S1[0, 0] -> S4[0]; S22[0] -> S6[1, 0]; S0[0, 1] -> S5[0]; S0[1, 0] -> S37[1]; S0[0, 4] -> S15[0]; S24[0] -> S25[0]; S0[0, 9] -> S31[0]; S24[0] -> S27[0]; S1[0, 0] -> S2[0, 0]; S26[0] -> S7[1, 0]; S19[0] -> S20[0]; S27[0] -> S31[0]; S0[0, 5] -> S18[0]; S29[0] -> S7[1, 1]; S8[0] -> S11[0]; S0[0, 10] -> S35[0]; S0[0, 0] -> S2[0, 0]; S25[0] -> S26[0]; S0[0, 7] -> S24[0]; S0[0, 6] -> S22[0]; S0[0, 3] -> S12[0]; S3[1, 0] -> S14[1, 0]; S15[0] -> S18[0]; S0[0, 2] -> S8[0]; S31[0] -> S32[0]; S0[0, 8] -> S27[0]; S16[0] -> S17[0]; S11[0] -> S12[0] }

RecoveredSchedule := { S7[i0, i1] -> [1 + i0, 1 + i1, 0, 3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[0] -> [1, 0, 0, 7]; S25[0] -> [1, 0, 0, 8]; S34[0] -> [1, 0, 0, 10]; S26[0] -> [1, 0, 0, 9]; S19[0] -> [1, 0, 0, 6]; S4[0] -> [1, 0, 0, 1]; S15[0] -> [1, 0, 0, 4]; S0[0, i1] -> [0, -i1, 0, 12] : 0 <= i1 <= 10; S0[1, 0] -> [1, 0, 0, 12]; S21[i0] -> [1, i0, 0, 7] : 0 <= i0 <= 1; S32[0] -> [1, 0, 0, 10]; S16[0] -> [1, 0, 0, 5]; S33[0] -> [1, 0, 0, 11]; S8[0] -> [1, 0, 0, 2]; S10[0] -> [1, 0, 0, 4]; S5[0] -> [1, 0, 0, 2]; S13[0] -> [1, 0, 0, 5]; S9[0] -> [1, 0, 0, 3]; S31[0] -> [1, 0, 0, 9]; S35[0] -> [1, 0, 0, 11]; S27[0] -> [1, 0, 0, 8]; S18[0] -> [1, 0, 0, 5]; S28[0] -> [1, 0, 0, 9]; S24[0] -> [1, 0, 0, 7]; S1[i0, 0] -> [1, 2i0, 0, i0] : 0 <= i0 <= 1; S12[0] -> [1, 0, 0, 4]; S14[i0, i1] -> [1 + i0, 2 + i1, 1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S37[i0] -> [1, i0, 0, 12 - 7i0] : 0 <= i0 <= 2; S6[i0, 0] -> [1, i0, 0, 3 - 2i0] : 0 <= i0 <= 2; S22[0] -> [1, 0, 0, 6]; S11[0] -> [1, 0, 0, 3]; S2[i0, 0] -> [1, 1 + i0, 0, 0] : 0 <= i0 <= 1; S3[i0, 0] -> [1, 1 + i0, 0, 2] : 0 <= i0 <= 1; S29[0] -> [1, 0, 0, 10]; S17[0] -> [1, 0, 0, 6] }

--- Stats ---
Qops: 59
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 28 domains, 31 points.
2D: 7 domains, 28 points.
Total: 35 domains, 59 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
1 : 26
2 : 4
3 : 3
4 : 1
12 : 1
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {1:26,2:1,3:1,}
2 -> {2:3,3:2,4:1,12:1,}
------------------------------
--- Timing ---
Reconstruction: 36ms
Scheduling: 20ms
Total execution time: 57ms
-------------
