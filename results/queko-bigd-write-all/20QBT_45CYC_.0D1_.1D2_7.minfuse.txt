Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Checking that all qops have been accounted for ... num_qops: 45, num_points: 45
True
Checking that recovered schedule respects dependences ... True
Checking that all qubits have the same number of accesses ... 0: { cx (2) }
1: { cx (6) }
2: { cx (1) }
3: { cx (4) }
4: { cx (6) }
5: { cx (2) }
6: { cx (13) }
7: { cx (4) }
9: { cx (2) }
10: { cx (3) }
11: { cx (2) }
12: { cx (4) }
13: { cx (8) }
14: { cx (5) }
15: { cx (7) }
16: { cx (6) }
17: { cx (6) }
18: { cx (8) }
19: { cx (1) }
Index expression count: 90
0: { cx (2) }
1: { cx (6) }
2: { cx (1) }
3: { cx (4) }
4: { cx (6) }
5: { cx (2) }
6: { cx (13) }
7: { cx (4) }
9: { cx (2) }
10: { cx (3) }
11: { cx (2) }
12: { cx (4) }
13: { cx (8) }
14: { cx (5) }
15: { cx (7) }
16: { cx (6) }
17: { cx (6) }
18: { cx (8) }
19: { cx (1) }
Index expression count: 90
True
Checking for isomorphism between original and recovered dependence graphs ... True
Domain := { S4[i0, 0] : 0 <= i0 <= 1; S24[i0, 0] : 0 <= i0 <= 1; S40[i0, 0] : 0 <= i0 <= 1; S38[i0, 0] : 0 <= i0 <= 1; S26[i0, 0] : 0 <= i0 <= 1; S32[i0, 0] : 0 <= i0 <= 1; S0[i0, 0] : 0 <= i0 <= 1; S6[i0, 0] : 0 <= i0 <= 1; S12[i0, 0] : 0 <= i0 <= 1; S20[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S10[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S36[i0, 0] : 0 <= i0 <= 1; S28[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, 0] : 0 <= i0 <= 1; S8[i0, 0] : 0 <= i0 <= 1; S14[i0, 0] : 0 <= i0 <= 1; S16[i0, 0] : 0 <= i0 <= 1; S34[i0, 0] : 0 <= i0 <= 1; S44[0]; S42[i0, 0] : 0 <= i0 <= 1 }

Read := { S0[i0, i1 = 0] -> q[16 - 10i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[6 + 12i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> q[18 - 7i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> q[5] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[16 - 3i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S10[i0, i1, i2 = 0] -> q[18 - 6i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S10[i0, i1, i2 = 0] -> q[16 + i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1, i2 = 0] -> q[15] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1, i2 = 0] -> q[4 + 10i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S42[i0, i1 = 0] -> q[15 - i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[14 - 5i0] : 0 <= i0 <= 1; S20[i0, i1, i2 = 0] -> q[17 - 10i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[i0, i1, i2 = 0] -> q[7 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S8[i0, i1 = 0] -> q[6 + 10i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[10 - 8i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[1] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[3 + i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[1] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[13 - 7i0] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[4 + 9i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[9]; S44[i0 = 0] -> q[1]; S36[i0, i1 = 0] -> q[4 - 3i0] : 0 <= i0 <= 1; S36[i0, i1 = 0] -> q[3 + i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[3] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[11 - 11i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[12i0] : 0 <= i0 <= 1; S6[i0, i1 = 0] -> q[18 - 12i0] : 0 <= i0 <= 1; S6[i0, i1 = 0] -> q[6 + 10i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[15 - 2i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[13 - 7i0] : 0 <= i0 <= 1; S40[i0, i1 = 0] -> q[14 + i0] : 0 <= i0 <= 1; S40[i0, i1 = 0] -> q[13] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[18 - 12i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 7i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[17] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[12 + 7i0] : 0 <= i0 <= 1 }

Write := { S0[i0, i1 = 0] -> q[16 - 10i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[6 + 12i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> q[18 - 7i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> q[5] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[16 - 3i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S10[i0, i1, i2 = 0] -> q[18 - 6i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S10[i0, i1, i2 = 0] -> q[16 + i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1, i2 = 0] -> q[15] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1, i2 = 0] -> q[4 + 10i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S42[i0, i1 = 0] -> q[15 - i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[14 - 5i0] : 0 <= i0 <= 1; S20[i0, i1, i2 = 0] -> q[17 - 10i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[i0, i1, i2 = 0] -> q[7 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S8[i0, i1 = 0] -> q[6 + 10i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[10 - 8i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[1] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[3 + i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[1] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[13 - 7i0] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[4 + 9i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[9]; S44[i0 = 0] -> q[1]; S36[i0, i1 = 0] -> q[4 - 3i0] : 0 <= i0 <= 1; S36[i0, i1 = 0] -> q[3 + i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[3] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[11 - 11i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[12i0] : 0 <= i0 <= 1; S6[i0, i1 = 0] -> q[18 - 12i0] : 0 <= i0 <= 1; S6[i0, i1 = 0] -> q[6 + 10i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[15 - 2i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[13 - 7i0] : 0 <= i0 <= 1; S40[i0, i1 = 0] -> q[14 + i0] : 0 <= i0 <= 1; S40[i0, i1 = 0] -> q[13] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[18 - 12i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 7i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[17] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[12 + 7i0] : 0 <= i0 <= 1 }

Call := { S44[i0 = 0] -> [1, 9]; S0[i0, i1 = 0] -> [6 + 12i0, 16 - 10i0] : 0 <= i0 <= 1; S6[i0, i1 = 0] -> [18 - 12i0, 6 + 10i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> [13 - 7i0, 15 - 2i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> [15 - i0, 14 - 5i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> [3 + i0, 1] : 0 <= i0 <= 1; S8[i0, i1 = 0] -> [18, 6 + 10i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> [11 - 11i0, 12i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> [12 + 7i0, 17] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> [6, 16 - 3i0] : 0 <= i0 <= 1; S20[i0, i1, i2 = 0] -> [17 - 10i0, 7 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S36[i0, i1 = 0] -> [3 + i0, 4 - 3i0] : 0 <= i0 <= 1; S40[i0, i1 = 0] -> [13, 14 + i0] : 0 <= i0 <= 1; S28[i0, i1, i2 = 0] -> [15, 4 + 10i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1 = 0] -> [1, 10 - 8i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> [5, 18 - 7i0] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> [13 - 7i0, 4 + 9i0] : 0 <= i0 <= 1; S10[i0, i1, i2 = 0] -> [18 - 6i0, 16 + i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1 = 0] -> [18 - 12i0, 6 + 7i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> [6, 3] : 0 <= i0 <= 1 }

DataDependencies := { S40[0, 0] -> S40[1, 0]; S28[1, 1, 0] -> S32[0, 0]; S14[1, 0] -> S16[0, 0]; S36[0, 0] -> S36[1, 0]; S4[1, 0] -> S32[0, 0]; S16[i0, 0] -> S10[1, 0, 0] : 0 <= i0 <= 1; S10[0, 1, 0] -> S12[0, 0]; S38[1, 0] -> S40[0, 0]; S6[0, 0] -> S6[1, 0]; S20[1, 1, 0] -> S24[0, 0]; S26[1, 0] -> S36[1, 0]; S10[1, 1, 0] -> S20[0, 0, 0]; S4[i0, 0] -> S6[1 - i0, 0] : 0 <= i0 <= 1; S38[0, 0] -> S38[1, 0]; S20[i0, i1, 0] -> S20[i0 + i1, 1 - i1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[0, 0] -> S4[0, 0]; S14[0, 0] -> S14[1, 0]; S8[0, 0] -> S8[1, 0]; S42[1, 0] -> S44[0]; S32[0, 0] -> S32[1, 0]; S12[1, 0] -> S14[0, 0]; S4[0, 0] -> S4[1, 0]; S40[i0, 0] -> S42[0, 0] : 0 <= i0 <= 1; S36[1, 0] -> S44[0]; S32[1, 0] -> S38[0, 0]; S24[1, 0] -> S26[0, 0]; S28[0, 1, 0] -> S36[0, 0]; S8[0, 0] -> S32[1, 0]; S32[1, 0] -> S34[0, 0]; S24[0, 0] -> S24[1, 0]; S36[1, 0] -> S38[0, 0]; S2[1, 0] -> S4[o0, 0] : 0 <= o0 <= 1; S28[1, 1, 0] -> S40[0, 0]; S34[0, 0] -> S34[1, 0]; S0[0, 0] -> S0[1, 0]; S16[0, 0] -> S16[1, 0]; S0[1, 0] -> S2[0, 0]; S34[1, 0] -> S38[1, 0]; S34[1, 0] -> S36[0, 0]; S42[0, 0] -> S42[1, 0]; S26[0, 0] -> S34[0, 0]; S2[0, 0] -> S6[0, 0]; S2[0, 0] -> S2[1, 0]; S8[1, 0] -> S10[0, 0, 0]; S26[0, 0] -> S26[1, 0]; S6[i0, 0] -> S8[o0, 0] : i0 <= 1 and 0 <= o0 <= i0; S10[i0, 0, 0] -> S10[i0, 1, 0] : 0 <= i0 <= 1; S28[i0, i1, 0] -> S28[i0 + i1, 1 - i1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S26[1, 0] -> S28[0, 0, 0]; S32[0, 0] -> S40[1, 0]; S12[0, 0] -> S12[1, 0] }

RecoveredSchedule := { S6[i0, 0] -> [3, i0, 0, 0, 0] : 0 <= i0 <= 1; S40[i0, 0] -> [14, i0, 0, 0, 0] : 0 <= i0 <= 1; S16[i0, 0] -> [5, 1, 2 + i0, 2 - 3i0, 0] : 0 <= i0 <= 1; S26[i0, 0] -> [8, i0, 0, 0, 0] : 0 <= i0 <= 1; S36[i0, 0] -> [12, i0, 0, 0, 0] : 0 <= i0 <= 1; S4[i0, 0] -> [2, i0, 0, 0, 0] : 0 <= i0 <= 1; S12[i0, 0] -> [5, 1, i0, 0, 3] : 0 <= i0 <= 1; S14[i0, 0] -> [5, 1, 1 + i0, 1, 1] : 0 <= i0 <= 1; S10[i0, i1, 0] -> [5, i0 + i1, 3 - 3i1, -i1, 2] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S38[i0, 0] -> [13, i0, 0, 0, 0] : 0 <= i0 <= 1; S0[i0, 0] -> [0, i0, 0, 0, 0] : 0 <= i0 <= 1; S32[i0, 0] -> [10, i0, 0, 0, 0] : 0 <= i0 <= 1; S44[0] -> [16, 0, 0, 0, 0]; S42[i0, 0] -> [15, i0, 0, 0, 0] : 0 <= i0 <= 1; S28[i0, i1, 0] -> [9, 2i0 + i1, i1, 0, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, 0] -> [4, i0, 0, 0, 0] : 0 <= i0 <= 1; S20[i0, i1, 0] -> [6, 2i0 + i1, i1, 0, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S34[i0, 0] -> [11, i0, 0, 0, 0] : 0 <= i0 <= 1; S24[i0, 0] -> [7, i0, 0, 0, 0] : 0 <= i0 <= 1; S2[i0, 0] -> [1, i0, 0, 0, 0] : 0 <= i0 <= 1 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 1 domains, 1 points.
2D: 16 domains, 32 points.
3D: 3 domains, 12 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
1 : 1
2 : 16
4 : 3
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {1:1,}
2 -> {2:16,}
3 -> {4:3,}
------------------------------
--- Timing ---
Reconstruction: 27ms
Scheduling: 11ms
Verification: 797ms
Total execution time: 836ms
-------------
