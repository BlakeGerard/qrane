Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Checking that all qops have been accounted for ... num_qops: 45, num_points: 45
True
Checking that recovered schedule respects dependences ... True
Checking that all qubits have the same number of accesses ... 0: { cx (8) }
1: { cx (9) }
3: { cx (9) }
4: { cx (1) }
5: { cx (3) }
7: { cx (6) }
8: { cx (1) }
10: { cx (6) }
12: { cx (10) }
13: { cx (8) }
14: { cx (3) }
15: { cx (9) }
16: { cx (2) }
17: { cx (1) }
18: { cx (14) }
Index expression count: 90
0: { cx (8) }
1: { cx (9) }
3: { cx (9) }
4: { cx (1) }
5: { cx (3) }
7: { cx (6) }
8: { cx (1) }
10: { cx (6) }
12: { cx (10) }
13: { cx (8) }
14: { cx (3) }
15: { cx (9) }
16: { cx (2) }
17: { cx (1) }
18: { cx (14) }
Index expression count: 90
True
Checking for isomorphism between original and recovered dependence graphs ... True
Domain := { S3[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S17[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S24[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S32[i0, 0] : 0 <= i0 <= 1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S20[i0, 0] : 0 <= i0 <= 1; S5[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S18[i0, 0] : 0 <= i0 <= 1; S22[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Read := { S5[i0, i1] -> q[1 + 2i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S5[i0, i1] -> q[18i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S18[i0, i1 = 0] -> q[18 - 5i0] : 0 <= i0 <= 1; S18[i0, i1 = 0] -> q[17 + i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[15 - 5i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[13 + 2i0] : 0 <= i0 <= 1; S4[i0, i1] -> q[5 - i0 + 13i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[18i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S24[i0, i1, i2 = 0] -> q[12 - 2i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1, i2 = 0] -> q[7 + 5i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S17[i0, i1] -> q[18 - 4i0] : i0 <= 1 and 0 <= i1 <= i0; S17[i0, i1] -> q[3 + 9i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[5 - 5i0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> q[i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0, i1] -> q[3 + 10i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, i1] -> q[1 + 17i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0, i1] -> q[7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> q[18i0 + 18i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S22[i0, i1, i2 = 0] -> q[15 - 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[10 + 5i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1] -> q[16 + 2i0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] -> q[i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S32[i0, i1 = 0] -> q[12 + 3i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[7 + 5i0] : 0 <= i0 <= 1; S2[i0, i1] -> q[7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> q[18i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[8 - 7i0 + 10i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[3i0 + 13i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0, i1] -> q[18 - 6i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S16[i0, i1] -> q[3 + 7i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0 }

Write := { S5[i0, i1] -> q[1 + 2i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S18[i0, i1 = 0] -> q[18 - 5i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[15 - 5i0] : 0 <= i0 <= 1; S4[i0, i1] -> q[18i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S24[i0, i1, i2 = 0] -> q[12 - 2i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S17[i0, i1] -> q[3 + 9i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0, i1] -> q[3 + 10i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0, i1] -> q[7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S22[i0, i1, i2 = 0] -> q[10 + 5i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1] -> q[i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S32[i0, i1 = 0] -> q[12 + 3i0] : 0 <= i0 <= 1; S2[i0, i1] -> q[7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[3i0 + 13i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0, i1] -> q[3 + 7i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0 }

Call := { S5[i0, i1] -> [18i0 + 3i1, 1 + 2i0 + 12i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> [8 - 7i0 + 10i1, 3i0 + 13i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [5 - 5i0, i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] -> [16 + 2i0, i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S32[i0, i1 = 0] -> [7 + 5i0, 12 + 3i0] : 0 <= i0 <= 1; S22[i0, i1, i2 = 0] -> [15 - 3i1, 10 + 5i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0, i1] -> [18i0 + 18i1, 7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0, i1] -> [18 - 6i0 + 2i1, 3 + 7i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> [5 - i0 + 13i1, 18i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S20[i0, i1 = 0] -> [13 + 2i0, 15 - 5i0] : 0 <= i0 <= 1; S24[i0, i1, i2 = 0] -> [7 + 5i0, 12 - 2i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, i1] -> [1 + 17i0, 3 + 10i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, i1] -> [18i0 + 3i1, 7 - 6i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S18[i0, i1 = 0] -> [17 + i0, 18 - 5i0] : 0 <= i0 <= 1; S17[i0, i1] -> [18 - 4i0, 3 + 9i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0 }

DataDependencies := { S20[i0, 0] -> S22[0, o1, 0] : 0 <= i0 <= 1 and 0 <= o1 <= 1; S1[i0, 1 - i0] -> S4[1, 0] : 0 <= i0 <= 1; S5[1, 0] -> S18[0, 0]; S0[i0, i1] -> S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S18[0, 0] -> S18[1, 0]; S24[i0, i1, 0] -> S17[1, 0] : i0 <= 1 and -i0 < i1 <= 1; S6[1, 0] -> S0[1, 0]; S2[0, 0] -> S3[0, o1] : 0 <= o1 <= 1; S1[0, 0] -> S3[0, 0]; S3[0, 1] -> S32[0, 0]; S4[1, 0] -> S17[0, 0]; S6[1, 0] -> S9[0, o1] : 0 <= o1 <= 1; S4[1, 0] -> S18[0, 0]; S6[0, i1] -> S3[1, 0] : 0 <= i1 <= 1; S5[1, 0] -> S16[0, 0]; S4[0, 0] -> S6[0, 0]; S6[1, 0] -> S1[1, 0]; S3[0, 1] -> S24[0, o1, 0] : 0 <= o1 <= 1; S9[1, 0] -> S5[1, 0]; S0[0, 1] -> S4[1, 0]; S9[0, 1] -> S9[1, 1]; S22[1, 1, 0] -> S32[o0, 0] : 0 <= o0 <= 1; S3[1, 0] -> S6[1, 0]; S24[1, 1, 0] -> S22[1, 0, 0]; S2[0, 1] -> S5[0, 1]; S32[0, 0] -> S32[1, 0]; S3[0, 0] -> S4[0, 0]; S9[0, i1] -> S1[1, 0] : 0 <= i1 <= 1; S4[0, 1] -> S4[1, 0]; S5[0, 0] -> S6[0, o1] : 0 <= o1 <= 1; S9[0, 0] -> S0[1, 0]; S9[1, i1] -> S18[o0, 0] : i1 <= 1 and 0 <= o0 <= i1; S0[0, 0] -> S3[0, 0]; S1[i0, i1] -> S2[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, 1 - i0] -> S4[i0, 1 - i0] : 0 <= i0 <= 1; S17[0, 0] -> S18[0, 0]; S6[1, 0] -> S4[1, 0]; S0[1, 0] -> S9[1, 0]; S0[0, 0] -> S2[0, 0]; S17[1, 0] -> S32[0, 0]; S20[0, 0] -> S20[1, 0]; S4[1, 0] -> S16[0, 0]; S5[0, 1] -> S9[0, o1] : 0 <= o1 <= 1; S17[1, i1] -> S22[1, 1, 0] : 0 <= i1 <= 1; S22[0, i1, 0] -> S22[i1, 1 - i1, 0] : 0 <= i1 <= 1; S24[i0, i1, 0] -> S24[i0 + i1, o1, 0] : i0 >= 0 and i1 <= 1 - i0 and -i1 < o1 <= 1; S24[0, 1, 0] -> S16[1, 0]; S18[1, 0] -> S20[0, 0]; S22[0, i1, 0] -> S24[1 - i1, 0, 0] : 0 <= i1 <= 1; S4[i0, i1] -> S5[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[0, 0] -> S18[0, 0]; S16[i0, i1] -> S17[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, 1 - i0] -> S9[i0, o1] : i0 <= 1 and 0 <= o1 <= i0; S22[i0, 1 - i0, 0] -> S16[1, o1] : i0 <= 1 and -i0 < o1 <= 1 }

RecoveredSchedule := { S22[i0, i1, 0] -> [1, 2, 2i0 + i1, 0, i1, 1 - 2i0, 1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S5[i0, i1] -> [0, i0, i0, i1, 5, 2, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S32[i0, 0] -> [2, i0, 0, 0, 0, 0, 0] : 0 <= i0 <= 1; S6[i0, i1] -> [0, 0, i0, i1, 6 - 3i0, 3, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> [0, 0, i0, i0 + i1, 1, 0, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0, i1] -> [0, i0, 1, i1, 4 - 4i1, 5, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1, 0] -> [1, 2, 1, 1, i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[i0, 0] -> [1, 1 + i0, 0, 0, 0, 0, 3] : 0 <= i0 <= 1; S18[i0, 0] -> [1, i0, 2 - 2i0, 0, 0, 2 - 3i0, 2] : 0 <= i0 <= 1; S17[i0, i1] -> [1, 2i0, 2, 0, i1, 1, 4] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> [0, 0, i0, i1, 5i0, 4, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> [0, 0, i0, i0 + i1, 2, 1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [0, 0, i0, i1, 3 - i0, 7, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> [0, i0, 0, i1, 4, 6, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0, i1] -> [1, 2i0, 2, 0, i1, 0, 0] : i0 <= 1 and 0 <= i1 <= i0 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
2D: 13 domains, 37 points.
3D: 2 domains, 8 points.
Total: 15 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 3
3 : 9
4 : 3
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
2 -> {2:3,3:9,4:1,}
3 -> {4:2,}
------------------------------
--- Timing ---
Reconstruction: 89ms
Scheduling: 94ms
Verification: 2014ms
Total execution time: 2202ms
-------------
