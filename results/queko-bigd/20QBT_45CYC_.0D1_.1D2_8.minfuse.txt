Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Checking that all qops have been accounted for ... num_qops: 45, num_points: 45
True
Checking that recovered schedule respects dependences ... True
Checking that all qubits have the same number of accesses ... 2: { cx (1) }
4: { cx (2) }
5: { cx (4) }
6: { cx (5) }
7: { cx (10) }
8: { cx (8) }
10: { cx (1) }
11: { cx (17) }
12: { cx (1) }
13: { cx (4) }
15: { cx (13) }
16: { cx (5) }
18: { cx (19) }
Index expression count: 90
2: { cx (1) }
4: { cx (2) }
5: { cx (4) }
6: { cx (5) }
7: { cx (10) }
8: { cx (8) }
10: { cx (1) }
11: { cx (17) }
12: { cx (1) }
13: { cx (4) }
15: { cx (13) }
16: { cx (5) }
18: { cx (19) }
Index expression count: 90
True
Checking for isomorphism between original and recovered dependence graphs ... True
Domain := { S3[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S11[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S9[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S13[i0, 0] : 0 <= i0 <= 1; S5[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S21[i0, 0] : 0 <= i0 <= 1; S27[i0, 0] : 0 <= i0 <= 1; S8[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, 0] : 0 <= i0 <= 1; S15[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S23[i0, 0] : 0 <= i0 <= 1; S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Read := { S5[i0, i1] -> q[18 - 5i0 + 3i1] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1] -> q[15 - 4i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S15[i0, i1, i2 = 0] -> q[8 + 8i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S15[i0, i1, i2 = 0] -> q[5 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0, i1] -> q[18 - 10i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> q[6 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> q[18 - 3i0] : 0 <= i0 <= 1; S29[i0, i1 = 0] -> q[6 + i0] : 0 <= i0 <= 1; S11[i0, i1] -> q[18 - 11i0 + 11i1] : i0 <= 1 and 0 <= i1 <= i0; S11[i0, i1] -> q[11 - 9i0 + 13i1] : i0 <= 1 and 0 <= i1 <= i0; S23[i0, i1 = 0] -> q[11 + 7i0] : 0 <= i0 <= 1; S23[i0, i1 = 0] -> q[7 + 4i0] : 0 <= i0 <= 1; S21[i0, i1 = 0] -> q[16 - 3i0] : 0 <= i0 <= 1; S21[i0, i1 = 0] -> q[11] : 0 <= i0 <= 1; S8[i0, i1] -> q[15 - 8i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S8[i0, i1] -> q[7 + 11i0] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[18 - 11i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[6 + 5i0] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S27[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S9[i0, i1] -> q[11 + 7i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S9[i0, i1] -> q[7 + 8i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S13[i0, i1 = 0] -> q[8 - 3i0] : 0 <= i0 <= 1; S13[i0, i1 = 0] -> q[5 - i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[11 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> q[8 + 7i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S7[i0, i1] -> q[15 + 3i0 - 5i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> q[10 - 3i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[15 - 8i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[11 + 7i0] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> q[15 + 3i0 + 3i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[4 + 11i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Write := { S5[i0, i1] -> q[15 - 4i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S15[i0, i1, i2 = 0] -> q[5 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0, i1] -> q[18 - 10i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> q[18 - 3i0] : 0 <= i0 <= 1; S11[i0, i1] -> q[11 - 9i0 + 13i1] : i0 <= 1 and 0 <= i1 <= i0; S23[i0, i1 = 0] -> q[7 + 4i0] : 0 <= i0 <= 1; S21[i0, i1 = 0] -> q[11] : 0 <= i0 <= 1; S8[i0, i1] -> q[15 - 8i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[18 - 11i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S9[i0, i1] -> q[7 + 8i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S13[i0, i1 = 0] -> q[5 - i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[8 + 7i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S7[i0, i1] -> q[10 - 3i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[15 - 8i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> q[4 + 11i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Call := { S21[i0, i1 = 0] -> [16 - 3i0, 11] : 0 <= i0 <= 1; S5[i0, i1] -> [18 - 5i0 + 3i1, 15 - 4i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> [15 + 3i0 + 3i1, 4 + 11i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [6 + 5i0, 18 - 11i0 + i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> [11 + 7i0, 15 - 8i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> [6 + i0, 18 - 3i0] : 0 <= i0 <= 1; S23[i0, i1 = 0] -> [11 + 7i0, 7 + 4i0] : 0 <= i0 <= 1; S8[i0, i1] -> [7 + 11i0, 15 - 8i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S1[i0, i1] -> [11 + 7i1, 8 + 7i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S27[i0, i1 = 0] -> [6, 18] : 0 <= i0 <= 1; S4[i0, i1] -> [6 + 5i0 + 2i1, 18 - 10i0 + 8i1] : i0 <= 1 and 0 <= i1 <= i0; S13[i0, i1 = 0] -> [8 - 3i0, 5 - i0] : 0 <= i0 <= 1; S15[i0, i1, i2 = 0] -> [8 + 8i0, 5 + 3i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S7[i0, i1] -> [15 + 3i0 - 5i1, 10 - 3i0 + 4i1] : i0 <= 1 and 0 <= i1 <= i0; S9[i0, i1] -> [11 + 7i0, 7 + 8i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S11[i0, i1] -> [18 - 11i0 + 11i1, 11 - 9i0 + 13i1] : i0 <= 1 and 0 <= i1 <= i0 }

DataDependencies := { S11[0, 0] -> S4[1, 0]; S8[1, 0] -> S29[1, 0]; S13[i0, 0] -> S15[o0, 0, 0] : i0 >= 0 and 0 <= o0 <= 1 - i0; S0[0, i1] -> S1[o0, 1 - i1] : i1 <= 1 and 0 <= o0 <= i1; S23[1, 0] -> S27[0, 0]; S4[0, 0] -> S27[0, 0]; S21[0, 0] -> S21[1, 0]; S4[1, 1] -> S21[0, 0]; S13[0, 0] -> S13[1, 0]; S6[0, 0] -> S11[0, 0]; S15[1, i1, 0] -> S4[1, o1] : i1 <= 1 and -i1 < o1 <= 1; S23[0, 0] -> S6[1, o1] : 0 <= o1 <= 1; S1[0, i1] -> S3[1 - i1, 1 - i1] : 0 <= i1 <= 1; S9[0, i1] -> S11[0, 0] : 0 <= i1 <= 1; S11[0, 0] -> S27[0, 0]; S29[0, 0] -> S8[1, o1] : 0 <= o1 <= 1; S4[0, 0] -> S6[1, o1] : 0 <= o1 <= 1; S29[0, 0] -> S11[1, 1]; S6[i0, i1] -> S7[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S3[1, 1] -> S15[o0, o1, 0] : o0 >= 0 and 0 <= o1 <= 1 - o0; S3[1, 1] -> S13[0, 0]; S4[0, 0] -> S23[1, 0]; S11[0, 0] -> S5[1, 0]; S11[0, 0] -> S3[1, o1] : 0 <= o1 <= 1; S27[0, 0] -> S27[1, 0]; S0[0, 1] -> S6[0, 0]; S7[1, 1] -> S23[1, 0]; S8[1, i1] -> S11[1, i1] : 0 <= i1 <= 1; S11[1, 1] -> S29[1, 0]; S21[1, 0] -> S23[0, 0]; S1[1, 0] -> S9[1, 1]; S3[0, 0] -> S4[0, 0]; S9[0, 1] -> S1[1, 0]; S9[1, i1] -> S8[1, i1] : 0 <= i1 <= 1; S5[0, 0] -> S6[0, 0]; S21[1, 0] -> S6[1, 1]; S5[1, 0] -> S21[0, 0]; S0[i0, 1 - i0] -> S3[0, 0] : 0 <= i0 <= 1; S7[1, 0] -> S9[1, 0]; S3[1, i1] -> S5[1, 0] : 0 <= i1 <= 1; S0[0, 1] -> S11[0, 0]; S4[0, 0] -> S11[0, 0]; S0[0, 1] -> S9[0, o1] : 0 <= o1 <= 1; S3[1, 0] -> S23[0, 0]; S9[0, 0] -> S3[1, 0]; S0[1, 0] -> S5[0, 0]; S5[0, 0] -> S27[0, 0]; S7[0, 0] -> S8[0, 0]; S7[1, 0] -> S27[0, 0]; S27[1, 0] -> S29[0, 0]; S6[1, i1] -> S27[0, 0] : 0 <= i1 <= 1; S1[i0, 0] -> S11[0, 0] : 0 <= i0 <= 1; S0[0, 0] -> S13[1, 0]; S29[0, 0] -> S9[1, o1] : 0 <= o1 <= 1; S6[0, 0] -> S8[0, 0]; S15[i0, i1, 0] -> S15[o0, 1 + i0 - o0, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0 and o0 >= i0 and i1 <= o0 <= 1; S1[0, 1] -> S0[1, 0]; S8[0, 0] -> S9[0, o1] : 0 <= o1 <= 1; S4[i0, i1] -> S5[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S4[0, 0] -> S7[1, 0] }

RecoveredSchedule := { S1[i0, i1] -> [0, i0, 1, 1 + i1, 0, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> [i0, 1, 1, i1, 3, 13] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1] -> [i0, 1, 1, i1, 4, 7] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> [2i0, 1, 1, i1, 5, 10] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> [2i0, 1, 1, i1, 6, 9] : i0 <= 1 and 0 <= i1 <= i0; S13[i0, 0] -> [i0, 1 - i0, 1, 1 - i0, 3, 8] : 0 <= i0 <= 1; S15[i0, i1, 0] -> [1, i0, 1, -i0 + i1, 4 - 2i1, 2] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S23[i0, 0] -> [2, 1, 1, i0, 4 + 3i0, 1] : 0 <= i0 <= 1; S27[i0, 0] -> [2 + i0, 1, 1, 1 - i0, 8 - 2i0, 5] : 0 <= i0 <= 1; S0[i0, i1] -> [0, i0, 0, i1, 0, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [0, 1 + i0 - i1, 1, i0, 2, 14] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, 0] -> [3, 1, 1, 2i0, 7, 3] : 0 <= i0 <= 1; S21[i0, 0] -> [1 + i0, 1, 1, 1 - i0, 4 - i0, 6] : 0 <= i0 <= 1; S9[i0, i1] -> [3i0, 1, 1, i1, 8 - 9i1, 11] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, i1] -> [3i0, 1, 1, i1, 7 + 2i0, 4] : i0 <= 1 and 0 <= i1 <= i0; S11[i0, i1] -> [3i0, 1, 1, 1 + i1, 1, 12] : i0 <= 1 and 0 <= i1 <= i0 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
2D: 15 domains, 41 points.
3D: 1 domains, 4 points.
Total: 16 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 5
3 : 9
4 : 2
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
2 -> {2:5,3:9,4:1,}
3 -> {4:1,}
------------------------------
--- Timing ---
Reconstruction: 141ms
Scheduling: 227ms
Verification: 2174ms
Total execution time: 2545ms
-------------
