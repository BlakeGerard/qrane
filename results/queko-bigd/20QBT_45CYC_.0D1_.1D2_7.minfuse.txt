Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Checking that all qops have been accounted for ... num_qops: 45, num_points: 45
True
Checking that recovered schedule respects dependences ... True
Checking that all qubits have the same number of accesses ... 0: { cx (2) }
1: { cx (6) }
2: { cx (1) }
3: { cx (4) }
4: { cx (6) }
5: { cx (2) }
6: { cx (13) }
7: { cx (4) }
9: { cx (2) }
10: { cx (3) }
11: { cx (2) }
12: { cx (4) }
13: { cx (8) }
14: { cx (5) }
15: { cx (7) }
16: { cx (6) }
17: { cx (6) }
18: { cx (8) }
19: { cx (1) }
Index expression count: 90
0: { cx (2) }
1: { cx (6) }
2: { cx (1) }
3: { cx (4) }
4: { cx (6) }
5: { cx (2) }
6: { cx (13) }
7: { cx (4) }
9: { cx (2) }
10: { cx (3) }
11: { cx (2) }
12: { cx (4) }
13: { cx (8) }
14: { cx (5) }
15: { cx (7) }
16: { cx (6) }
17: { cx (6) }
18: { cx (8) }
19: { cx (1) }
Index expression count: 90
True
Checking for isomorphism between original and recovered dependence graphs ... True
Domain := { S11[i0] : 0 <= i0 <= 1; S18[i0] : 0 <= i0 <= 1; S3[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S8[i0] : 0 <= i0 <= 1; S4[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] : 0 <= i0 <= 1; S5[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S22[i0] : 0 <= i0 <= 1; S12[i0] : 0 <= i0 <= 1; S13[i0] : 0 <= i0 <= 1; S15[i0] : 0 <= i0 <= 1; S16[i0] : 0 <= i0 <= 1; S2[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S19[i0] : 0 <= i0 <= 1; S7[i0] : 0 <= i0 <= 1; S10[i0] : 0 <= i0 <= 1; S1[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Read := { S12[i0] -> q[10 + 6i0] : 0 <= i0 <= 1; S12[i0] -> q[7 + 11i0] : 0 <= i0 <= 1; S22[i0] -> q[14 + i0] : 0 <= i0 <= 1; S22[i0] -> q[13] : 0 <= i0 <= 1; S5[i0, i1] -> q[13 - 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S5[i0, i1] -> q[6 + 8i0 + 9i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> q[18 - 5i0 - 18i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> q[6 - 2i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[13 + i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[6 + 9i0 + 13i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] -> q[2 + 5i0] : 0 <= i0 <= 1; S9[i0] -> q[1 + 16i0] : 0 <= i0 <= 1; S15[i0] -> q[4 + 2i0] : 0 <= i0 <= 1; S15[i0] -> q[1 + 2i0] : 0 <= i0 <= 1; S16[i0] -> q[6 + 9i0] : 0 <= i0 <= 1; S16[i0] -> q[3 + i0] : 0 <= i0 <= 1; S18[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S18[i0] -> q[3 + 10i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[16 - 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> q[6 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S11[i0] -> q[10 + 6i0] : 0 <= i0 <= 1; S11[i0] -> q[7 + 11i0] : 0 <= i0 <= 1; S7[i0] -> q[15 - 9i0] : 0 <= i0 <= 1; S7[i0] -> q[14 + 2i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[11 + 4i0 + 7i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S1[i0, i1] -> q[4i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S13[i0] -> q[10 + 8i0] : 0 <= i0 <= 1; S13[i0] -> q[1 + 4i0] : 0 <= i0 <= 1; S6[i0, i1] -> q[18 - 17i0 - 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] -> q[6 + 3i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0] -> q[17 + i0] : 0 <= i0 <= 1; S10[i0] -> q[7 + 9i0] : 0 <= i0 <= 1; S8[i0] -> q[18 - 6i0] : 0 <= i0 <= 1; S8[i0] -> q[6 + 11i0] : 0 <= i0 <= 1; S19[i0] -> q[4 + 2i0] : 0 <= i0 <= 1; S19[i0] -> q[1 + 12i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[11 - 10i0 + 5i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> q[5 - 2i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Write := { S12[i0] -> q[10 + 6i0] : 0 <= i0 <= 1; S22[i0] -> q[14 + i0] : 0 <= i0 <= 1; S5[i0, i1] -> q[13 - 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> q[6 - 2i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S4[i0, i1] -> q[13 + i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] -> q[2 + 5i0] : 0 <= i0 <= 1; S15[i0] -> q[1 + 2i0] : 0 <= i0 <= 1; S16[i0] -> q[3 + i0] : 0 <= i0 <= 1; S18[i0] -> q[4 + 11i0] : 0 <= i0 <= 1; S3[i0, i1] -> q[16 - 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S11[i0] -> q[10 + 6i0] : 0 <= i0 <= 1; S7[i0] -> q[14 + 2i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[4i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S13[i0] -> q[10 + 8i0] : 0 <= i0 <= 1; S6[i0, i1] -> q[6 + 3i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0] -> q[7 + 9i0] : 0 <= i0 <= 1; S8[i0] -> q[6 + 11i0] : 0 <= i0 <= 1; S19[i0] -> q[1 + 12i0] : 0 <= i0 <= 1; S0[i0, i1] -> q[11 - 10i0 + 5i1] : i0 >= 0 and 0 <= i1 <= 1 - i0 }

Call := { S13[i0] -> [1 + 4i0, 10 + 8i0] : 0 <= i0 <= 1; S5[i0, i1] -> [6 + 8i0 + 9i1, 13 - 4i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S15[i0] -> [4 + 2i0, 1 + 2i0] : 0 <= i0 <= 1; S0[i0, i1] -> [5 - 2i0 + i1, 11 - 10i0 + 5i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S3[i0, i1] -> [6 + 6i1, 16 - 3i0 + i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[i0, i1] -> [18 - 17i0 - 6i1, 6 + 3i0 + 11i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] -> [1 + 16i0, 2 + 5i0] : 0 <= i0 <= 1; S8[i0] -> [18 - 6i0, 6 + 11i0] : 0 <= i0 <= 1; S1[i0, i1] -> [11 + 4i0 + 7i1, 4i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S12[i0] -> [7 + 11i0, 10 + 6i0] : 0 <= i0 <= 1; S4[i0, i1] -> [6 + 9i0 + 13i1, 13 + i0 + 4i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S22[i0] -> [13, 14 + i0] : 0 <= i0 <= 1; S18[i0] -> [3 + 10i0, 4 + 11i0] : 0 <= i0 <= 1; S19[i0] -> [4 + 2i0, 1 + 12i0] : 0 <= i0 <= 1; S7[i0] -> [15 - 9i0, 14 + 2i0] : 0 <= i0 <= 1; S11[i0] -> [7 + 11i0, 10 + 6i0] : 0 <= i0 <= 1; S10[i0] -> [17 + i0, 7 + 9i0] : 0 <= i0 <= 1; S2[i0, i1] -> [18 - 5i0 - 18i1, 6 - 2i0 + 6i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0] -> [6 + 9i0, 3 + i0] : 0 <= i0 <= 1 }

DataDependencies := { S5[0, 1] -> S7[0]; S18[1] -> S22[1]; S0[0, i1] -> S1[0, i1] : 0 <= i1 <= 1; S19[i0] -> S2[1, 0] : 0 <= i0 <= 1; S19[0] -> S6[1, 0]; S15[0] -> S19[0]; S10[i0] -> S11[i0] : 0 <= i0 <= 1; S19[1] -> S3[1, 0]; S13[0] -> S0[1, 0]; S10[1] -> S13[1]; S2[i0, i1] -> S3[i0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S6[0, 0] -> S7[1]; S18[i0] -> S19[i0] : 0 <= i0 <= 1; S1[0, 1] -> S13[1]; S4[0, i1] -> S6[0, i1] : 0 <= i1 <= 1; S15[i0] -> S16[1 - i0] : 0 <= i0 <= 1; S8[1] -> S10[0]; S7[1] -> S10[1]; S10[0] -> S12[0]; S9[1] -> S10[0]; S3[0, 0] -> S6[0, 0]; S8[0] -> S13[1]; S6[0, i1] -> S8[i1] : 0 <= i1 <= 1; S7[0] -> S18[1]; S2[0, 0] -> S5[0, 0]; S18[0] -> S2[1, 0]; S3[0, 0] -> S7[1]; S1[1, 0] -> S18[o0] : 0 <= o0 <= 1; S5[0, 0] -> S19[1]; S3[0, 1] -> S4[0, 1]; S7[0] -> S22[0]; S8[1] -> S9[1]; S12[i0] -> S13[i0] : 0 <= i0 <= 1; S2[0, 0] -> S13[1]; S5[i0, 0] -> S6[i0, 0] : 0 <= i0 <= 1; S8[0] -> S19[1]; S0[1, 0] -> S15[o0] : 0 <= o0 <= 1; S0[0, 1] -> S3[0, 0]; S1[0, i1] -> S2[0, 1 - i1] : 0 <= i1 <= 1; S6[0, 0] -> S13[1]; S2[0, 0] -> S4[0, 0]; S8[0] -> S3[1, 0]; S7[1] -> S8[0]; S5[0, i1] -> S18[1] : 0 <= i1 <= 1; S8[0] -> S16[0]; S2[0, 1] -> S8[1]; S16[i0] -> S18[i0] : 0 <= i0 <= 1; S9[0] -> S0[1, 0]; S11[1] -> S13[1]; S8[0] -> S15[1]; S3[1, 0] -> S22[o0] : 0 <= o0 <= 1; S22[i0] -> S4[1, 0] : 0 <= i0 <= 1; S2[0, i1] -> S6[0, i1] : 0 <= i1 <= 1; S4[i0, 0] -> S5[i0, 0] : 0 <= i0 <= 1; S16[1] -> S1[1, 0]; S11[i0] -> S12[i0] : 0 <= i0 <= 1 }

RecoveredSchedule := { S15[i0] -> [1, 1, i0] : 0 <= i0 <= 1; S18[i0] -> [1, 4, i0] : 0 <= i0 <= 1; S7[i0] -> [0, 12, i0] : 0 <= i0 <= 1; S19[i0] -> [1, 5, i0] : 0 <= i0 <= 1; S6[i0, i1] -> [i0, 11, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S0[i0, i1] -> [i0, 0, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S22[i0] -> [1, 8, i0] : 0 <= i0 <= 1; S8[i0] -> [0, 13, i0] : 0 <= i0 <= 1; S1[i0, i1] -> [i0, 3, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0] -> [0, 15, i0] : 0 <= i0 <= 1; S12[i0] -> [0, 17, i0] : 0 <= i0 <= 1; S4[i0, i1] -> [i0, 9, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S2[i0, i1] -> [i0, 6, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S9[i0] -> [0, 14, i0] : 0 <= i0 <= 1; S3[i0, i1] -> [i0, 7, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S16[i0] -> [1, 2, i0] : 0 <= i0 <= 1; S5[i0, i1] -> [i0, 10, i1] : i0 >= 0 and 0 <= i1 <= 1 - i0; S11[i0] -> [0, 16, i0] : 0 <= i0 <= 1; S13[i0] -> [0, 18, i0] : 0 <= i0 <= 1 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 12 domains, 24 points.
2D: 7 domains, 21 points.
Total: 19 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 12
3 : 7
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {2:12,}
2 -> {3:7,}
------------------------------
--- Timing ---
Reconstruction: 19ms
Scheduling: 20ms
Verification: 824ms
Total execution time: 864ms
-------------
