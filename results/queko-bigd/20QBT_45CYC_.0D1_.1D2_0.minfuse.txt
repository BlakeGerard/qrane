Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Checking

Checking that all qops have been accounted for ... num_qops: 45, num_points: 45
True
Checking that recovered schedule respects dependences ... True
Checking that all qubits have the same number of accesses ... 0: { cx (5) }
1: { cx (4) }
3: { cx (2) }
4: { cx (5) }
5: { cx (2) }
7: { cx (17) }
10: { cx (5) }
11: { cx (4) }
12: { cx (5) }
13: { cx (4) }
14: { cx (1) }
15: { cx (1) }
16: { cx (15) }
17: { cx (1) }
18: { cx (19) }
Index expression count: 90
0: { cx (5) }
1: { cx (4) }
3: { cx (2) }
4: { cx (5) }
5: { cx (2) }
7: { cx (17) }
10: { cx (5) }
11: { cx (4) }
12: { cx (5) }
13: { cx (4) }
14: { cx (1) }
15: { cx (1) }
16: { cx (15) }
17: { cx (1) }
18: { cx (19) }
Index expression count: 90
True
Checking for isomorphism between original and recovered dependence graphs ... True
Domain := { S3[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S9[i0, 0] : 0 <= i0 <= 1; S18[i0, i1, i2] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S0[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S2[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S8[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S16[i0, 0] : 0 <= i0 <= 1; S27[i0, 0] : 0 <= i0 <= 1; S29[i0, 0] : 0 <= i0 <= 1; S23[i0, i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S1[i0, i1] : i0 <= 1 and 0 <= i1 <= i0 }

Read := { S5[i0, i1] -> q[12 - 12i0 + 18i1] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i1] -> q[10 - 3i0 + 9i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> q[15 - 8i0] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> q[12 + 4i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> q[18 - 14i0] : 0 <= i0 <= 1; S29[i0, i1 = 0] -> q[7 - 6i0] : 0 <= i0 <= 1; S23[i0, i1] -> q[18] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S23[i0, i1] -> q[1 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2] -> q[16 - 16i0 + 16i2] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S18[i0, i1, i2] -> q[7i0] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S8[i0, i1] -> q[18 - 11i1] : i0 <= 1 and 0 <= i1 <= i0; S8[i0, i1] -> q[5 - i0 + 12i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[12 + i0 - 6i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S27[i0, i1 = 0] -> q[7] : 0 <= i0 <= 1; S9[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S9[i0, i1 = 0] -> q[7 + 9i0] : 0 <= i0 <= 1; S1[i0, i1] -> q[11 + 2i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0; S1[i0, i1] -> q[10 + 7i0 - 10i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> q[12 - 11i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> q[5 + 13i0 - 2i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[12 - 8i0 + 14i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[10 - 7i0 + 13i1] : i0 <= 1 and 0 <= i1 <= i0; S2[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S2[i0, i1] -> q[10 + 3i0 - 6i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> q[10 + 3i0 - 6i1] : i0 <= 1 and 0 <= i1 <= i0; S16[i0, i1 = 0] -> q[16 - 2i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[7 + 9i0] : 0 <= i0 <= 1 }

Write := { S5[i0, i1] -> q[12 - 12i0 + 18i1] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> q[12 + 4i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> q[18 - 14i0] : 0 <= i0 <= 1; S23[i0, i1] -> q[1 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2] -> q[16 - 16i0 + 16i2] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S8[i0, i1] -> q[5 - i0 + 12i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S9[i0, i1 = 0] -> q[18] : 0 <= i0 <= 1; S1[i0, i1] -> q[11 + 2i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> q[12 - 11i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> q[12 - 8i0 + 14i1] : i0 <= 1 and 0 <= i1 <= i0; S2[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> q[11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S16[i0, i1 = 0] -> q[16 - 2i0] : 0 <= i0 <= 1 }

Call := { S5[i0, i1] -> [10 - 3i0 + 9i1, 12 - 12i0 + 18i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> [10 + 3i0 - 6i1, 11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S3[i0, i1] -> [12 + i0 - 6i1, 11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> [10 - 7i0 + 13i1, 12 - 8i0 + 14i1] : i0 <= 1 and 0 <= i1 <= i0; S29[i0, i1 = 0] -> [7 - 6i0, 18 - 14i0] : 0 <= i0 <= 1; S18[i0, i1, i2] -> [7i0, 16 - 16i0 + 16i2] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S23[i0, i1] -> [18, 1 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S8[i0, i1] -> [18 - 11i1, 5 - i0 + 12i1] : i0 <= 1 and 0 <= i1 <= i0; S1[i0, i1] -> [10 + 7i0 - 10i1, 11 + 2i0 + 5i1] : i0 <= 1 and 0 <= i1 <= i0; S16[i0, i1 = 0] -> [7 + 9i0, 16 - 2i0] : 0 <= i0 <= 1; S4[i0, i1] -> [15 - 8i0, 12 + 4i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, i1 = 0] -> [7, 18] : 0 <= i0 <= 1; S7[i0, i1] -> [5 + 13i0 - 2i1, 12 - 11i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0; S9[i0, i1 = 0] -> [7 + 9i0, 18] : 0 <= i0 <= 1; S2[i0, i1] -> [10 + 3i0 - 6i1, 11 + 5i0 + 2i1] : i0 <= 1 and 0 <= i1 <= i0 }

DataDependencies := { S18[i0, i1, i2] -> S18[o0, 1 + i0 - o0, o2] : i0 >= 0 and i1 <= 1 - i0 and i2 >= 0 and o0 >= i0 and o0 >= i1 and i2 <= o0 <= 1 and o0 <= 1 + i0 - i2 and i2 <= o2 <= i1 + i2; S8[1, 0] -> S23[1, 1]; S7[i0, i0] -> S8[i0, i0] : 0 <= i0 <= 1; S18[1, 1, 1] -> S6[1, 1]; S0[1, 0] -> S2[1, 0]; S27[1, 0] -> S29[0, 0]; S4[1, 0] -> S16[0, 0]; S18[1, 1, i2] -> S5[1, i2] : 0 <= i2 <= 1; S23[1, i1] -> S29[1, 0] : 0 <= i1 <= 1; S16[i0, 0] -> S18[0, 0, 0] : 0 <= i0 <= 1; S4[i0, i0] -> S5[i0, i0] : 0 <= i0 <= 1; S6[i0, i1] -> S7[i0, i0 - i1] : i0 <= 1 and 0 <= i1 <= i0; S5[i0, i0] -> S6[i0, i0] : 0 <= i0 <= 1; S18[1, 1, 1] -> S8[1, 1]; S23[0, i1] -> S6[1, o1] : i1 <= 1 and -i1 < o1 <= 1; S6[1, 1] -> S27[0, 0]; S7[1, 0] -> S23[1, 0]; S3[i0, i1] -> S4[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S5[1, 1] -> S23[0, o1] : 0 <= o1 <= 1; S23[0, 0] -> S7[1, 0]; S16[0, 0] -> S16[1, 0]; S6[1, i1] -> S8[1, o1] : i1 <= 1 and 0 <= o1 <= i1; S8[1, 0] -> S27[0, 0]; S9[1, 0] -> S0[1, o1] : 0 <= o1 <= 1; S1[1, 0] -> S3[1, 0]; S1[i0, i1] -> S2[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S18[1, 1, 1] -> S7[1, 1]; S9[0, 0] -> S9[1, 0]; S27[0, 0] -> S27[1, 0]; S7[1, 0] -> S27[0, 0]; S29[0, 0] -> S23[1, o1] : 0 <= o1 <= 1; S5[1, 1] -> S8[1, 1]; S2[i0, i1] -> S3[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S0[i0, i1] -> S1[i0, i1] : i0 <= 1 and 0 <= i1 <= i0; S8[0, 0] -> S9[0, 0] }

RecoveredSchedule := { S16[i0, 0] -> [0, 0, 0, 1 + i0, 0, 5 - 2i0, 2] : 0 <= i0 <= 1; S5[i0, i1] -> [i0, i0, 0, 0, -i0 + i1, 5, 5] : i0 <= 1 and 0 <= i1 <= i0; S7[i0, i1] -> [i0, i0, 0, 0, 1 + i0 + i1, 1, 6] : i0 <= 1 and 0 <= i1 <= i0; S6[i0, i1] -> [i0, i0, 0, 0, 1 + i1, 0, 7] : i0 <= 1 and 0 <= i1 <= i0; S1[i0, i1] -> [0, i1, 0, i0, 0, 1, 0] : i0 <= 1 and 0 <= i1 <= i0; S9[i0, 0] -> [0, 0, 0, i0, 1 - i0, 3 - 4i0, 10] : 0 <= i0 <= 1; S8[i0, i1] -> [i0, i0, 0, 0, 1 + i0 + i1, 2, 3] : i0 <= 1 and 0 <= i1 <= i0; S23[i0, i1] -> [1, 1 + i0, 0, 0, i1, 6 - 7i1, 1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2] -> [i0, i2, 0, 2 - 2i0, -i0 + i1, 4, 9] : i0 <= 1 and 0 <= i1 <= 1 and 0 <= i2 <= i0; S29[i0, 0] -> [1, 1 + i0, 2, 0, 0, 0, 0] : 0 <= i0 <= 1; S0[i0, i1] -> [0, i1, 0, i0, 0, 0, 8] : i0 <= 1 and 0 <= i1 <= i0; S2[i0, i1] -> [0, i1, 0, i0, 0, 2, 4] : i0 <= 1 and 0 <= i1 <= i0; S27[i0, 0] -> [1, 1, 1, i0, 0, 0, 0] : 0 <= i0 <= 1; S3[i0, i1] -> [0, i1, 0, i0, 0, 3, 12] : i0 <= 1 and 0 <= i1 <= i0; S4[i0, i1] -> [0, i1, 0, i0, 0, 4, 11] : i0 <= 1 and 0 <= i1 <= i0 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
2D: 14 domains, 39 points.
3D: 1 domains, 6 points.
Total: 15 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
2 : 4
3 : 9
4 : 1
6 : 1
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
2 -> {2:4,3:9,4:1,}
3 -> {6:1,}
------------------------------
--- Timing ---
Reconstruction: 65ms
Scheduling: 120ms
Verification: 2719ms
Total execution time: 2934ms
-------------
