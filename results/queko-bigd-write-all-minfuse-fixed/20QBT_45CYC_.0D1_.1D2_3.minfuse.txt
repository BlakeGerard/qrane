Parsing circuit

Processing circuit

Converting statements to qrane tuples ...  Done.
Constructing domains of one dimension ...  Done.
Attempting iterative merging of lower dimension domains to higher dimension domains ...  Done.
Pluto Minfuse chosen.
computing schedule ...Done.
Domain := { S4[i0, 0] : 0 <= i0 <= 1; S24[i0, 0] : 0 <= i0 <= 1; S28[i0, 0] : 0 <= i0 <= 1; S38[i0, 0] : 0 <= i0 <= 1; S26[i0, 0] : 0 <= i0 <= 1; S32[i0, 0] : 0 <= i0 <= 1; S0[i0, 0] : 0 <= i0 <= 1; S12[i0, 0] : 0 <= i0 <= 1; S20[i0, 0] : 0 <= i0 <= 1; S18[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, 0] : 0 <= i0 <= 1; S14[i0, 0] : 0 <= i0 <= 1; S10[i0, 0] : 0 <= i0 <= 1; S16[i0, 0] : 0 <= i0 <= 1; S30[i0, 0] : 0 <= i0 <= 1; S44[0]; S34[i0, 0] : 0 <= i0 <= 1; S42[i0, 0] : 0 <= i0 <= 1; S6[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

Read := { S12[i0, i1 = 0] -> q[o0] : 0 <= i0 <= 1 and 7 - i0 <= o0 <= 8 - i0; S28[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S28[i0, i1 = 0] -> q[6 + 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[7 - i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[9 + i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> q[12] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1 = 0] -> q[10 - i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[o0] : 9 <= o0 <= 10; S34[i0, i1 = 0] -> q[11 - 5i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6 + 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[11 - 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[15 - 8i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[7 + 6i0] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1, i2 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S32[i0, i1 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[8 - 2i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[13 - i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[9] : 0 <= i0 <= 1 }

Write := { S12[i0, i1 = 0] -> q[o0] : 0 <= i0 <= 1 and 7 - i0 <= o0 <= 8 - i0; S28[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S28[i0, i1 = 0] -> q[6 + 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[7 - i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[9 + i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> q[12] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1 = 0] -> q[10 - i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[o0] : 9 <= o0 <= 10; S34[i0, i1 = 0] -> q[11 - 5i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6 + 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[11 - 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[15 - 8i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[7 + 6i0] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1, i2 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S32[i0, i1 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[8 - 2i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[13 - i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[9] : 0 <= i0 <= 1 }

Call := { S44[i0 = 0] -> [9, 10]; S0[i0, i1 = 0] -> [12 - 6i0, 9 + 3i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> [6 + 5i0, 10 - 4i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> [6, 10] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> [6 + 5i0, 10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1 = 0] -> [6 + 6i0, 12 - 3i0] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> [12, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> [6 + 3i1, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S26[i0, i1 = 0] -> [6, 9 + 3i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> [15 - 8i0, 7 + 6i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> [13 - i0, 9] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> [7 - i0, 6 + 4i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> [12 - 6i0, 10] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> [12 - 3i0, 9 + i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> [11 - 3i0, 6 + 5i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> [6, 10 - i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> [8 - i0, 7 - i0] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> [9 + 3i0, 10] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> [8 - 2i0, 6 + 4i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> [11 - 5i0, 6 + 3i0] : 0 <= i0 <= 1 }

DataDependencies := { S20[1, 0] -> S22[0, 0, 0]; S14[1, 0] -> S16[0, 0]; S6[i0, i1, 0] -> S6[i0 + i1, 1 - i1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0, 0] -> S12[1 - i0, 0] : 0 <= i0 <= 1; S38[1, 0] -> S18[1, 0, 0]; S32[0, 0] -> S22[1, 0, 0]; S2[0, 0] -> S10[1, 0]; S4[1, 0] -> S6[0, 0, 0]; S30[0, 0] -> S38[1, 0]; S38[0, 0] -> S44[0]; S38[0, 0] -> S38[1, 0]; S22[1, 0, 0] -> S42[0, 0]; S22[1, 1, 0] -> S38[0, 0]; S14[0, 0] -> S14[1, 0]; S30[1, 0] -> S34[1, 0]; S0[i0, 0] -> S16[i0, 0] : 0 <= i0 <= 1; S42[1, 0] -> S44[0]; S32[0, 0] -> S32[1, 0]; S16[1, 0] -> S18[0, 0, 0]; S12[1, 0] -> S14[0, 0]; S12[1, 0] -> S20[1, 0]; S4[0, 0] -> S4[1, 0]; S6[0, 1, 0] -> S18[0, 0, 0]; S18[i0, 0, 0] -> S18[i0, 1, 0] : 0 <= i0 <= 1; S24[0, 0] -> S30[1, 0]; S18[0, 1, 0] -> S20[0, 0]; S24[1, 0] -> S26[0, 0]; S24[0, 0] -> S24[1, 0]; S32[1, 0] -> S34[0, 0]; S2[1, 0] -> S4[o0, 0] : 0 <= o0 <= 1; S30[1, 0] -> S32[0, 0]; S28[0, 0] -> S32[0, 0]; S28[0, 0] -> S28[1, 0]; S34[0, 0] -> S34[1, 0]; S4[0, 0] -> S12[0, 0]; S34[1, 0] -> S22[1, o1, 0] : 0 <= o1 <= 1; S0[0, 0] -> S0[1, 0]; S16[0, 0] -> S16[1, 0]; S0[1, 0] -> S2[0, 0]; S10[0, 0] -> S10[1, 0]; S22[0, i1, 0] -> S24[o0, 0] : i1 <= 1 and 0 <= o0 <= i1; S20[0, 0] -> S20[1, 0]; S16[1, 0] -> S22[0, 1, 0]; S30[0, 0] -> S30[1, 0]; S42[0, 0] -> S42[1, 0]; S2[0, 0] -> S2[1, 0]; S22[i0, 0, 0] -> S22[i0, 1, 0] : 0 <= i0 <= 1; S26[i0, 0] -> S28[1 - i0, 0] : 0 <= i0 <= 1; S6[1, 1, 0] -> S10[0, 0]; S26[0, 0] -> S26[1, 0]; S20[0, 0] -> S26[1, 0]; S28[1, 0] -> S30[0, 0]; S12[0, 0] -> S12[1, 0]; S10[1, 0] -> S32[1, 0]; S18[1, 1, 0] -> S42[0, 0] }

RecoveredSchedule := { S10[i0, 0] -> [4, i0, 0, 0, 0] : 0 <= i0 <= 1; S16[i0, 0] -> [7, i0, 0, 0, 0] : 0 <= i0 <= 1; S28[i0, 0] -> [8, 3 + i0, 0, 0, 8] : 0 <= i0 <= 1; S26[i0, 0] -> [8, 2 + i0, 1 - i0, 1 - 2i0, 6] : 0 <= i0 <= 1; S18[i0, i1, 0] -> [8, 8i0, i0 + i1, 1, 3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[i0, 0] -> [8, i0, 1 - i0, 2, 4] : 0 <= i0 <= 1; S22[i0, i1, 0] -> [8, 1 + 6i0, i1, 3 - 4i1, 2] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0, 0] -> [2, i0, 0, 0, 0] : 0 <= i0 <= 1; S12[i0, 0] -> [5, i0, 0, 0, 0] : 0 <= i0 <= 1; S14[i0, 0] -> [6, i0, 0, 0, 0] : 0 <= i0 <= 1; S38[i0, 0] -> [8, 7 + i0, 1, 0, 7] : 0 <= i0 <= 1; S44[0] -> [10, 0, 0, 0, 0]; S0[i0, 0] -> [0, i0, 0, 0, 0] : 0 <= i0 <= 1; S32[i0, 0] -> [8, 5 + i0, 0, 1, 5] : 0 <= i0 <= 1; S42[i0, 0] -> [9, i0, 0, 0, 0] : 0 <= i0 <= 1; S34[i0, 0] -> [8, 6 + i0, 0, 2, 0] : 0 <= i0 <= 1; S6[i0, i1, 0] -> [3, 2i0 + i1, i1, 0, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S30[i0, 0] -> [8, 4 + i0, 0, 1 - i0, 1] : 0 <= i0 <= 1; S2[i0, 0] -> [1, i0, 0, 0, 0] : 0 <= i0 <= 1; S24[i0, 0] -> [8, 1 + i0, 1, 0, 9] : 0 <= i0 <= 1 }

Checking

Domain := { S4[i0, 0] : 0 <= i0 <= 1; S24[i0, 0] : 0 <= i0 <= 1; S28[i0, 0] : 0 <= i0 <= 1; S38[i0, 0] : 0 <= i0 <= 1; S26[i0, 0] : 0 <= i0 <= 1; S32[i0, 0] : 0 <= i0 <= 1; S0[i0, 0] : 0 <= i0 <= 1; S12[i0, 0] : 0 <= i0 <= 1; S20[i0, 0] : 0 <= i0 <= 1; S18[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S2[i0, 0] : 0 <= i0 <= 1; S14[i0, 0] : 0 <= i0 <= 1; S10[i0, 0] : 0 <= i0 <= 1; S16[i0, 0] : 0 <= i0 <= 1; S30[i0, 0] : 0 <= i0 <= 1; S44[0]; S34[i0, 0] : 0 <= i0 <= 1; S42[i0, 0] : 0 <= i0 <= 1; S6[i0, i1, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1 }

Read := { S12[i0, i1 = 0] -> q[o0] : 0 <= i0 <= 1 and 7 - i0 <= o0 <= 8 - i0; S28[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S28[i0, i1 = 0] -> q[6 + 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[7 - i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[9 + i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> q[12] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1 = 0] -> q[10 - i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[o0] : 9 <= o0 <= 10; S34[i0, i1 = 0] -> q[11 - 5i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6 + 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[11 - 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[15 - 8i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[7 + 6i0] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1, i2 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S32[i0, i1 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[8 - 2i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[13 - i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[9] : 0 <= i0 <= 1 }

Write := { S12[i0, i1 = 0] -> q[o0] : 0 <= i0 <= 1 and 7 - i0 <= o0 <= 8 - i0; S28[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S28[i0, i1 = 0] -> q[6 + 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[7 - i0] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[12 - 3i0] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> q[9 + i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> q[12] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S18[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S24[i0, i1 = 0] -> q[10 - i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S26[i0, i1 = 0] -> q[6] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[10] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S44[i0 = 0] -> q[o0] : 9 <= o0 <= 10; S34[i0, i1 = 0] -> q[11 - 5i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> q[6 + 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[11 - 3i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[15 - 8i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> q[7 + 6i0] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S6[i0, i1, i2 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> q[6 + 3i1] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S32[i0, i1 = 0] -> q[10 - 4i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> q[6 + 5i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[8 - 2i0] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> q[6 + 4i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[12 - 6i0] : 0 <= i0 <= 1; S0[i0, i1 = 0] -> q[9 + 3i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[13 - i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> q[9] : 0 <= i0 <= 1 }

Call := { S44[i0 = 0] -> [9, 10]; S0[i0, i1 = 0] -> [12 - 6i0, 9 + 3i0] : 0 <= i0 <= 1; S32[i0, i1 = 0] -> [6 + 5i0, 10 - 4i0] : 0 <= i0 <= 1; S42[i0, i1 = 0] -> [6, 10] : 0 <= i0 <= 1; S6[i0, i1, i2 = 0] -> [6 + 5i0, 10 - 4i0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S28[i0, i1 = 0] -> [6 + 6i0, 12 - 3i0] : 0 <= i0 <= 1; S18[i0, i1, i2 = 0] -> [12, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S22[i0, i1, i2 = 0] -> [6 + 3i1, 10] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S26[i0, i1 = 0] -> [6, 9 + 3i0] : 0 <= i0 <= 1; S14[i0, i1 = 0] -> [15 - 8i0, 7 + 6i0] : 0 <= i0 <= 1; S16[i0, i1 = 0] -> [13 - i0, 9] : 0 <= i0 <= 1; S4[i0, i1 = 0] -> [7 - i0, 6 + 4i0] : 0 <= i0 <= 1; S20[i0, i1 = 0] -> [12 - 6i0, 10] : 0 <= i0 <= 1; S30[i0, i1 = 0] -> [12 - 3i0, 9 + i0] : 0 <= i0 <= 1; S10[i0, i1 = 0] -> [11 - 3i0, 6 + 5i0] : 0 <= i0 <= 1; S24[i0, i1 = 0] -> [6, 10 - i0] : 0 <= i0 <= 1; S12[i0, i1 = 0] -> [8 - i0, 7 - i0] : 0 <= i0 <= 1; S38[i0, i1 = 0] -> [9 + 3i0, 10] : 0 <= i0 <= 1; S2[i0, i1 = 0] -> [8 - 2i0, 6 + 4i0] : 0 <= i0 <= 1; S34[i0, i1 = 0] -> [11 - 5i0, 6 + 3i0] : 0 <= i0 <= 1 }

DataDependencies := { S20[1, 0] -> S22[0, 0, 0]; S14[1, 0] -> S16[0, 0]; S6[i0, i1, 0] -> S6[i0 + i1, 1 - i1, 0] : i0 >= 0 and 0 <= i1 <= 1 - i0; S10[i0, 0] -> S12[1 - i0, 0] : 0 <= i0 <= 1; S38[1, 0] -> S18[1, 0, 0]; S32[0, 0] -> S22[1, 0, 0]; S2[0, 0] -> S10[1, 0]; S4[1, 0] -> S6[0, 0, 0]; S30[0, 0] -> S38[1, 0]; S38[0, 0] -> S44[0]; S38[0, 0] -> S38[1, 0]; S22[1, 0, 0] -> S42[0, 0]; S22[1, 1, 0] -> S38[0, 0]; S14[0, 0] -> S14[1, 0]; S30[1, 0] -> S34[1, 0]; S0[i0, 0] -> S16[i0, 0] : 0 <= i0 <= 1; S42[1, 0] -> S44[0]; S32[0, 0] -> S32[1, 0]; S16[1, 0] -> S18[0, 0, 0]; S12[1, 0] -> S14[0, 0]; S12[1, 0] -> S20[1, 0]; S4[0, 0] -> S4[1, 0]; S6[0, 1, 0] -> S18[0, 0, 0]; S18[i0, 0, 0] -> S18[i0, 1, 0] : 0 <= i0 <= 1; S24[0, 0] -> S30[1, 0]; S18[0, 1, 0] -> S20[0, 0]; S24[1, 0] -> S26[0, 0]; S24[0, 0] -> S24[1, 0]; S32[1, 0] -> S34[0, 0]; S2[1, 0] -> S4[o0, 0] : 0 <= o0 <= 1; S30[1, 0] -> S32[0, 0]; S28[0, 0] -> S32[0, 0]; S28[0, 0] -> S28[1, 0]; S34[0, 0] -> S34[1, 0]; S4[0, 0] -> S12[0, 0]; S34[1, 0] -> S22[1, o1, 0] : 0 <= o1 <= 1; S0[0, 0] -> S0[1, 0]; S16[0, 0] -> S16[1, 0]; S0[1, 0] -> S2[0, 0]; S10[0, 0] -> S10[1, 0]; S22[0, i1, 0] -> S24[o0, 0] : i1 <= 1 and 0 <= o0 <= i1; S20[0, 0] -> S20[1, 0]; S16[1, 0] -> S22[0, 1, 0]; S30[0, 0] -> S30[1, 0]; S42[0, 0] -> S42[1, 0]; S2[0, 0] -> S2[1, 0]; S22[i0, 0, 0] -> S22[i0, 1, 0] : 0 <= i0 <= 1; S26[i0, 0] -> S28[1 - i0, 0] : 0 <= i0 <= 1; S6[1, 1, 0] -> S10[0, 0]; S26[0, 0] -> S26[1, 0]; S20[0, 0] -> S26[1, 0]; S28[1, 0] -> S30[0, 0]; S12[0, 0] -> S12[1, 0]; S10[1, 0] -> S32[1, 0]; S18[1, 1, 0] -> S42[0, 0] }

RecoveredSchedule := { S10[i0, 0] -> [4, i0, 0, 0, 0] : 0 <= i0 <= 1; S16[i0, 0] -> [7, i0, 0, 0, 0] : 0 <= i0 <= 1; S28[i0, 0] -> [8, 3 + i0, 0, 0, 8] : 0 <= i0 <= 1; S26[i0, 0] -> [8, 2 + i0, 1 - i0, 1 - 2i0, 6] : 0 <= i0 <= 1; S18[i0, i1, 0] -> [8, 8i0, i0 + i1, 1, 3] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S20[i0, 0] -> [8, i0, 1 - i0, 2, 4] : 0 <= i0 <= 1; S22[i0, i1, 0] -> [8, 1 + 6i0, i1, 3 - 4i1, 2] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S4[i0, 0] -> [2, i0, 0, 0, 0] : 0 <= i0 <= 1; S12[i0, 0] -> [5, i0, 0, 0, 0] : 0 <= i0 <= 1; S14[i0, 0] -> [6, i0, 0, 0, 0] : 0 <= i0 <= 1; S38[i0, 0] -> [8, 7 + i0, 1, 0, 7] : 0 <= i0 <= 1; S44[0] -> [10, 0, 0, 0, 0]; S0[i0, 0] -> [0, i0, 0, 0, 0] : 0 <= i0 <= 1; S32[i0, 0] -> [8, 5 + i0, 0, 1, 5] : 0 <= i0 <= 1; S42[i0, 0] -> [9, i0, 0, 0, 0] : 0 <= i0 <= 1; S34[i0, 0] -> [8, 6 + i0, 0, 2, 0] : 0 <= i0 <= 1; S6[i0, i1, 0] -> [3, 2i0 + i1, i1, 0, 0] : 0 <= i0 <= 1 and 0 <= i1 <= 1; S30[i0, 0] -> [8, 4 + i0, 0, 1 - i0, 1] : 0 <= i0 <= 1; S2[i0, 0] -> [1, i0, 0, 0, 0] : 0 <= i0 <= 1; S24[i0, 0] -> [8, 1 + i0, 1, 0, 9] : 0 <= i0 <= 1 }

--- Stats ---
Qops: 45
Lookahead Breadth Limit: 2
Search Limit: 0
Domains: 
1D: 1 domains, 1 points.
2D: 16 domains, 32 points.
3D: 3 domains, 12 points.
Total: 20 domains, 45 points.
-------------
--- Substr ---
Num substr             : 0
Max substr size        : 0
Avg substr size        : 0
Avg substr occurrences : 0
--------------
--- Domain Size Breakdown ---
Domain Size : Domain Count
1 : 1
2 : 16
4 : 3
-----------------------------
--- Reconstruction Profile ---
Dimension -> {Cardinality:Count}
1 -> {1:1,}
2 -> {2:16,}
3 -> {4:3,}
------------------------------
--- Timing ---
Reconstruction: 26ms
Scheduling: 14ms
Total execution time: 42ms
-------------
